{
  "docusaurus-plugin-content-docs": {
    "default": {
      "loadedVersions": [
        {
          "versionName": "current",
          "label": "Next",
          "banner": null,
          "badge": false,
          "className": "docs-version-current",
          "path": "/docs",
          "tagsPath": "/docs/tags",
          "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs",
          "editUrlLocalized": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/i18n/en/docusaurus-plugin-content-docs/current",
          "isLast": true,
          "routePriority": -1,
          "sidebarFilePath": "/home/runner/sde-babu-blog-content/sidebars.js",
          "contentPath": "/home/runner/sde-babu-blog-content/docs",
          "contentPathLocalized": "/home/runner/sde-babu-blog-content/i18n/en/docusaurus-plugin-content-docs/current",
          "docs": [
            {
              "unversionedId": "Arrays/BasicQues/majority_element",
              "id": "Arrays/BasicQues/majority_element",
              "title": "majority_element",
              "description": "",
              "source": "@site/docs/Arrays/BasicQues/majority_element.mdx",
              "sourceDirName": "Arrays/BasicQues",
              "slug": "/Arrays/BasicQues/majority_element",
              "permalink": "/docs/Arrays/BasicQues/majority_element",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Arrays/BasicQues/majority_element.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Arrays",
                "permalink": "/docs/category/arrays"
              },
              "next": {
                "title": "Duplicate in Array",
                "permalink": "/docs/Arrays/CycleTechniques/duplicate_in_array"
              }
            },
            {
              "unversionedId": "Arrays/CycleTechniques/duplicate_in_array",
              "id": "Arrays/CycleTechniques/duplicate_in_array",
              "title": "Duplicate in Array",
              "description": "Level - Medium",
              "source": "@site/docs/Arrays/CycleTechniques/duplicate_in_array.mdx",
              "sourceDirName": "Arrays/CycleTechniques",
              "slug": "/Arrays/CycleTechniques/duplicate_in_array",
              "permalink": "/docs/Arrays/CycleTechniques/duplicate_in_array",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Arrays/CycleTechniques/duplicate_in_array.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1,
                "title": "Duplicate in Array"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "majority_element",
                "permalink": "/docs/Arrays/BasicQues/majority_element"
              },
              "next": {
                "title": "First Missing Positive",
                "permalink": "/docs/Arrays/CycleTechniques/first_missing_pos"
              }
            },
            {
              "unversionedId": "Arrays/CycleTechniques/find_all_duplicates",
              "id": "Arrays/CycleTechniques/find_all_duplicates",
              "title": "find_all_duplicates",
              "description": "",
              "source": "@site/docs/Arrays/CycleTechniques/find_all_duplicates.mdx",
              "sourceDirName": "Arrays/CycleTechniques",
              "slug": "/Arrays/CycleTechniques/find_all_duplicates",
              "permalink": "/docs/Arrays/CycleTechniques/find_all_duplicates",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Arrays/CycleTechniques/find_all_duplicates.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "First Missing Positive",
                "permalink": "/docs/Arrays/CycleTechniques/first_missing_pos"
              },
              "next": {
                "title": "Merge Intervals",
                "permalink": "/docs/Arrays/Interval/merge_intervals"
              }
            },
            {
              "unversionedId": "Arrays/CycleTechniques/first_missing_pos",
              "id": "Arrays/CycleTechniques/first_missing_pos",
              "title": "First Missing Positive",
              "description": "Level - Hard",
              "source": "@site/docs/Arrays/CycleTechniques/first_missing_pos.mdx",
              "sourceDirName": "Arrays/CycleTechniques",
              "slug": "/Arrays/CycleTechniques/first_missing_pos",
              "permalink": "/docs/Arrays/CycleTechniques/first_missing_pos",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Arrays/CycleTechniques/first_missing_pos.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 2,
              "frontMatter": {
                "sidebar_position": 2,
                "title": "First Missing Positive"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Duplicate in Array",
                "permalink": "/docs/Arrays/CycleTechniques/duplicate_in_array"
              },
              "next": {
                "title": "find_all_duplicates",
                "permalink": "/docs/Arrays/CycleTechniques/find_all_duplicates"
              }
            },
            {
              "unversionedId": "Arrays/Interval/merge_intervals",
              "id": "Arrays/Interval/merge_intervals",
              "title": "Merge Intervals",
              "description": "Level - Medium",
              "source": "@site/docs/Arrays/Interval/merge_intervals.mdx",
              "sourceDirName": "Arrays/Interval",
              "slug": "/Arrays/Interval/merge_intervals",
              "permalink": "/docs/Arrays/Interval/merge_intervals",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Arrays/Interval/merge_intervals.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1,
                "title": "Merge Intervals"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "find_all_duplicates",
                "permalink": "/docs/Arrays/CycleTechniques/find_all_duplicates"
              },
              "next": {
                "title": "Maximum Subarray",
                "permalink": "/docs/Arrays/KadaneAlgo/max_subarray"
              }
            },
            {
              "unversionedId": "Arrays/KadaneAlgo/max_product_subarray",
              "id": "Arrays/KadaneAlgo/max_product_subarray",
              "title": "max_product_subarray",
              "description": "",
              "source": "@site/docs/Arrays/KadaneAlgo/max_product_subarray.mdx",
              "sourceDirName": "Arrays/KadaneAlgo",
              "slug": "/Arrays/KadaneAlgo/max_product_subarray",
              "permalink": "/docs/Arrays/KadaneAlgo/max_product_subarray",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Arrays/KadaneAlgo/max_product_subarray.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Maximum Subarray",
                "permalink": "/docs/Arrays/KadaneAlgo/max_subarray"
              },
              "next": {
                "title": "Set Matrix Zero",
                "permalink": "/docs/Arrays/Matrix/set_matrix_0"
              }
            },
            {
              "unversionedId": "Arrays/KadaneAlgo/max_subarray",
              "id": "Arrays/KadaneAlgo/max_subarray",
              "title": "Maximum Subarray",
              "description": "Level - Medium",
              "source": "@site/docs/Arrays/KadaneAlgo/max_subarray.mdx",
              "sourceDirName": "Arrays/KadaneAlgo",
              "slug": "/Arrays/KadaneAlgo/max_subarray",
              "permalink": "/docs/Arrays/KadaneAlgo/max_subarray",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Arrays/KadaneAlgo/max_subarray.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1,
                "title": "Maximum Subarray"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Merge Intervals",
                "permalink": "/docs/Arrays/Interval/merge_intervals"
              },
              "next": {
                "title": "max_product_subarray",
                "permalink": "/docs/Arrays/KadaneAlgo/max_product_subarray"
              }
            },
            {
              "unversionedId": "Arrays/Matrix/set_matrix_0",
              "id": "Arrays/Matrix/set_matrix_0",
              "title": "Set Matrix Zero",
              "description": "Level - Medium",
              "source": "@site/docs/Arrays/Matrix/set_matrix_0.mdx",
              "sourceDirName": "Arrays/Matrix",
              "slug": "/Arrays/Matrix/set_matrix_0",
              "permalink": "/docs/Arrays/Matrix/set_matrix_0",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Arrays/Matrix/set_matrix_0.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1,
                "title": "Set Matrix Zero"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "max_product_subarray",
                "permalink": "/docs/Arrays/KadaneAlgo/max_product_subarray"
              },
              "next": {
                "title": "spiral_matrix",
                "permalink": "/docs/Arrays/Matrix/spiral_matrix"
              }
            },
            {
              "unversionedId": "Arrays/Matrix/spiral_matrix",
              "id": "Arrays/Matrix/spiral_matrix",
              "title": "spiral_matrix",
              "description": "",
              "source": "@site/docs/Arrays/Matrix/spiral_matrix.mdx",
              "sourceDirName": "Arrays/Matrix",
              "slug": "/Arrays/Matrix/spiral_matrix",
              "permalink": "/docs/Arrays/Matrix/spiral_matrix",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Arrays/Matrix/spiral_matrix.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Set Matrix Zero",
                "permalink": "/docs/Arrays/Matrix/set_matrix_0"
              },
              "next": {
                "title": "sum-closest",
                "permalink": "/docs/Arrays/N-Sum/sum-closest"
              }
            },
            {
              "unversionedId": "Arrays/N-Sum/sum",
              "id": "Arrays/N-Sum/sum",
              "title": "sum",
              "description": "",
              "source": "@site/docs/Arrays/N-Sum/2-sum.mdx",
              "sourceDirName": "Arrays/N-Sum",
              "slug": "/Arrays/N-Sum/sum",
              "permalink": "/docs/Arrays/N-Sum/sum",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Arrays/N-Sum/2-sum.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 2,
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "sum-closest",
                "permalink": "/docs/Arrays/N-Sum/sum-closest"
              },
              "next": {
                "title": "sum",
                "permalink": "/docs/Arrays/N-Sum/sum"
              }
            },
            {
              "unversionedId": "Arrays/N-Sum/sum",
              "id": "Arrays/N-Sum/sum",
              "title": "sum",
              "description": "",
              "source": "@site/docs/Arrays/N-Sum/3-sum.mdx",
              "sourceDirName": "Arrays/N-Sum",
              "slug": "/Arrays/N-Sum/sum",
              "permalink": "/docs/Arrays/N-Sum/sum",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Arrays/N-Sum/3-sum.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 3,
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "sum-closest",
                "permalink": "/docs/Arrays/N-Sum/sum-closest"
              },
              "next": {
                "title": "sum",
                "permalink": "/docs/Arrays/N-Sum/sum"
              }
            },
            {
              "unversionedId": "Arrays/N-Sum/sum",
              "id": "Arrays/N-Sum/sum",
              "title": "sum",
              "description": "",
              "source": "@site/docs/Arrays/N-Sum/4-sum.mdx",
              "sourceDirName": "Arrays/N-Sum",
              "slug": "/Arrays/N-Sum/sum",
              "permalink": "/docs/Arrays/N-Sum/sum",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Arrays/N-Sum/4-sum.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 4,
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "sum-closest",
                "permalink": "/docs/Arrays/N-Sum/sum-closest"
              },
              "next": {
                "title": "sum",
                "permalink": "/docs/Arrays/N-Sum/sum"
              }
            },
            {
              "unversionedId": "Arrays/N-Sum/sum-closest",
              "id": "Arrays/N-Sum/sum-closest",
              "title": "sum-closest",
              "description": "",
              "source": "@site/docs/Arrays/N-Sum/3-sum-closest.mdx",
              "sourceDirName": "Arrays/N-Sum",
              "slug": "/Arrays/N-Sum/sum-closest",
              "permalink": "/docs/Arrays/N-Sum/sum-closest",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Arrays/N-Sum/3-sum-closest.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 3,
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "spiral_matrix",
                "permalink": "/docs/Arrays/Matrix/spiral_matrix"
              },
              "next": {
                "title": "sum",
                "permalink": "/docs/Arrays/N-Sum/sum"
              }
            },
            {
              "unversionedId": "Arrays/Prefix-Sum/continuous-subarray-sum",
              "id": "Arrays/Prefix-Sum/continuous-subarray-sum",
              "title": "continuous-subarray-sum",
              "description": "",
              "source": "@site/docs/Arrays/Prefix-Sum/continuous-subarray-sum.mdx",
              "sourceDirName": "Arrays/Prefix-Sum",
              "slug": "/Arrays/Prefix-Sum/continuous-subarray-sum",
              "permalink": "/docs/Arrays/Prefix-Sum/continuous-subarray-sum",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Arrays/Prefix-Sum/continuous-subarray-sum.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Running Sum Array",
                "permalink": "/docs/Arrays/Prefix-Sum/running_sum"
              },
              "next": {
                "title": "pivot_index",
                "permalink": "/docs/Arrays/Prefix-Sum/pivot_index"
              }
            },
            {
              "unversionedId": "Arrays/Prefix-Sum/pivot_index",
              "id": "Arrays/Prefix-Sum/pivot_index",
              "title": "pivot_index",
              "description": "",
              "source": "@site/docs/Arrays/Prefix-Sum/pivot_index.mdx",
              "sourceDirName": "Arrays/Prefix-Sum",
              "slug": "/Arrays/Prefix-Sum/pivot_index",
              "permalink": "/docs/Arrays/Prefix-Sum/pivot_index",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Arrays/Prefix-Sum/pivot_index.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "continuous-subarray-sum",
                "permalink": "/docs/Arrays/Prefix-Sum/continuous-subarray-sum"
              },
              "next": {
                "title": "subarray_sum_divisible_k",
                "permalink": "/docs/Arrays/Prefix-Sum/subarray_sum_divisible_k"
              }
            },
            {
              "unversionedId": "Arrays/Prefix-Sum/running_sum",
              "id": "Arrays/Prefix-Sum/running_sum",
              "title": "Running Sum Array",
              "description": "Level - Easy",
              "source": "@site/docs/Arrays/Prefix-Sum/running_sum.mdx",
              "sourceDirName": "Arrays/Prefix-Sum",
              "slug": "/Arrays/Prefix-Sum/running_sum",
              "permalink": "/docs/Arrays/Prefix-Sum/running_sum",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Arrays/Prefix-Sum/running_sum.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1,
                "title": "Running Sum Array"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "sum",
                "permalink": "/docs/Arrays/N-Sum/sum"
              },
              "next": {
                "title": "continuous-subarray-sum",
                "permalink": "/docs/Arrays/Prefix-Sum/continuous-subarray-sum"
              }
            },
            {
              "unversionedId": "Arrays/Prefix-Sum/subarray_sum_divisible_k",
              "id": "Arrays/Prefix-Sum/subarray_sum_divisible_k",
              "title": "subarray_sum_divisible_k",
              "description": "",
              "source": "@site/docs/Arrays/Prefix-Sum/subarray_sum_divisible_k.mdx",
              "sourceDirName": "Arrays/Prefix-Sum",
              "slug": "/Arrays/Prefix-Sum/subarray_sum_divisible_k",
              "permalink": "/docs/Arrays/Prefix-Sum/subarray_sum_divisible_k",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Arrays/Prefix-Sum/subarray_sum_divisible_k.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "pivot_index",
                "permalink": "/docs/Arrays/Prefix-Sum/pivot_index"
              },
              "next": {
                "title": "subarray_sum_equals_k",
                "permalink": "/docs/Arrays/Prefix-Sum/subarray_sum_equals_k"
              }
            },
            {
              "unversionedId": "Arrays/Prefix-Sum/subarray_sum_equals_k",
              "id": "Arrays/Prefix-Sum/subarray_sum_equals_k",
              "title": "subarray_sum_equals_k",
              "description": "",
              "source": "@site/docs/Arrays/Prefix-Sum/subarray_sum_equals_k.mdx",
              "sourceDirName": "Arrays/Prefix-Sum",
              "slug": "/Arrays/Prefix-Sum/subarray_sum_equals_k",
              "permalink": "/docs/Arrays/Prefix-Sum/subarray_sum_equals_k",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Arrays/Prefix-Sum/subarray_sum_equals_k.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "subarray_sum_divisible_k",
                "permalink": "/docs/Arrays/Prefix-Sum/subarray_sum_divisible_k"
              },
              "next": {
                "title": "Trapping Rain Water",
                "permalink": "/docs/Arrays/TwoPointers/trapping_rain_water"
              }
            },
            {
              "unversionedId": "Arrays/TwoPointers/container_with_most_water",
              "id": "Arrays/TwoPointers/container_with_most_water",
              "title": "container_with_most_water",
              "description": "Optimal Approach using Two Pointer Technique",
              "source": "@site/docs/Arrays/TwoPointers/container_with_most_water.mdx",
              "sourceDirName": "Arrays/TwoPointers",
              "slug": "/Arrays/TwoPointers/container_with_most_water",
              "permalink": "/docs/Arrays/TwoPointers/container_with_most_water",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Arrays/TwoPointers/container_with_most_water.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Next Permutation of a given array",
                "permalink": "/docs/Arrays/TwoPointers/next_permutation"
              },
              "next": {
                "title": "merge_sorted_arrays",
                "permalink": "/docs/Arrays/TwoPointers/merge_sorted_arrays"
              }
            },
            {
              "unversionedId": "Arrays/TwoPointers/merge_sorted_arrays",
              "id": "Arrays/TwoPointers/merge_sorted_arrays",
              "title": "merge_sorted_arrays",
              "description": "",
              "source": "@site/docs/Arrays/TwoPointers/merge_sorted_arrays.mdx",
              "sourceDirName": "Arrays/TwoPointers",
              "slug": "/Arrays/TwoPointers/merge_sorted_arrays",
              "permalink": "/docs/Arrays/TwoPointers/merge_sorted_arrays",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Arrays/TwoPointers/merge_sorted_arrays.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "container_with_most_water",
                "permalink": "/docs/Arrays/TwoPointers/container_with_most_water"
              },
              "next": {
                "title": "move_zeroes",
                "permalink": "/docs/Arrays/TwoPointers/move_zeroes"
              }
            },
            {
              "unversionedId": "Arrays/TwoPointers/move_zeroes",
              "id": "Arrays/TwoPointers/move_zeroes",
              "title": "move_zeroes",
              "description": "",
              "source": "@site/docs/Arrays/TwoPointers/move_zeroes.mdx",
              "sourceDirName": "Arrays/TwoPointers",
              "slug": "/Arrays/TwoPointers/move_zeroes",
              "permalink": "/docs/Arrays/TwoPointers/move_zeroes",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Arrays/TwoPointers/move_zeroes.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "merge_sorted_arrays",
                "permalink": "/docs/Arrays/TwoPointers/merge_sorted_arrays"
              },
              "next": {
                "title": "remove-duplicates-from-sorted-array",
                "permalink": "/docs/Arrays/TwoPointers/remove-duplicates-from-sorted-array"
              }
            },
            {
              "unversionedId": "Arrays/TwoPointers/next_permutation",
              "id": "Arrays/TwoPointers/next_permutation",
              "title": "Next Permutation of a given array",
              "description": "Level - Medium",
              "source": "@site/docs/Arrays/TwoPointers/next_permutation.mdx",
              "sourceDirName": "Arrays/TwoPointers",
              "slug": "/Arrays/TwoPointers/next_permutation",
              "permalink": "/docs/Arrays/TwoPointers/next_permutation",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Arrays/TwoPointers/next_permutation.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 3,
              "frontMatter": {
                "sidebar_position": 3,
                "title": "Next Permutation of a given array"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Trapping Rain Water",
                "permalink": "/docs/Arrays/TwoPointers/trapping_rain_water"
              },
              "next": {
                "title": "container_with_most_water",
                "permalink": "/docs/Arrays/TwoPointers/container_with_most_water"
              }
            },
            {
              "unversionedId": "Arrays/TwoPointers/remove-duplicates-from-sorted-array",
              "id": "Arrays/TwoPointers/remove-duplicates-from-sorted-array",
              "title": "remove-duplicates-from-sorted-array",
              "description": "",
              "source": "@site/docs/Arrays/TwoPointers/remove-duplicates-from-sorted-array.mdx",
              "sourceDirName": "Arrays/TwoPointers",
              "slug": "/Arrays/TwoPointers/remove-duplicates-from-sorted-array",
              "permalink": "/docs/Arrays/TwoPointers/remove-duplicates-from-sorted-array",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Arrays/TwoPointers/remove-duplicates-from-sorted-array.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "move_zeroes",
                "permalink": "/docs/Arrays/TwoPointers/move_zeroes"
              },
              "next": {
                "title": "sort_colors",
                "permalink": "/docs/Arrays/TwoPointers/sort_colors"
              }
            },
            {
              "unversionedId": "Arrays/TwoPointers/sort_colors",
              "id": "Arrays/TwoPointers/sort_colors",
              "title": "sort_colors",
              "description": "",
              "source": "@site/docs/Arrays/TwoPointers/sort_colors.mdx",
              "sourceDirName": "Arrays/TwoPointers",
              "slug": "/Arrays/TwoPointers/sort_colors",
              "permalink": "/docs/Arrays/TwoPointers/sort_colors",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Arrays/TwoPointers/sort_colors.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "remove-duplicates-from-sorted-array",
                "permalink": "/docs/Arrays/TwoPointers/remove-duplicates-from-sorted-array"
              },
              "next": {
                "title": "squares_sorted_arr",
                "permalink": "/docs/Arrays/TwoPointers/squares_sorted_arr"
              }
            },
            {
              "unversionedId": "Arrays/TwoPointers/squares_sorted_arr",
              "id": "Arrays/TwoPointers/squares_sorted_arr",
              "title": "squares_sorted_arr",
              "description": "2 pointer method",
              "source": "@site/docs/Arrays/TwoPointers/squares_sorted_arr.mdx",
              "sourceDirName": "Arrays/TwoPointers",
              "slug": "/Arrays/TwoPointers/squares_sorted_arr",
              "permalink": "/docs/Arrays/TwoPointers/squares_sorted_arr",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Arrays/TwoPointers/squares_sorted_arr.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "sort_colors",
                "permalink": "/docs/Arrays/TwoPointers/sort_colors"
              },
              "next": {
                "title": "Segment Trees",
                "permalink": "/docs/category/segment-trees"
              }
            },
            {
              "unversionedId": "Arrays/TwoPointers/trapping_rain_water",
              "id": "Arrays/TwoPointers/trapping_rain_water",
              "title": "Trapping Rain Water",
              "description": "Level - Hard",
              "source": "@site/docs/Arrays/TwoPointers/trapping_rain_water.mdx",
              "sourceDirName": "Arrays/TwoPointers",
              "slug": "/Arrays/TwoPointers/trapping_rain_water",
              "permalink": "/docs/Arrays/TwoPointers/trapping_rain_water",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Arrays/TwoPointers/trapping_rain_water.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 2,
              "frontMatter": {
                "sidebar_position": 2,
                "title": "Trapping Rain Water"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "subarray_sum_equals_k",
                "permalink": "/docs/Arrays/Prefix-Sum/subarray_sum_equals_k"
              },
              "next": {
                "title": "Next Permutation of a given array",
                "permalink": "/docs/Arrays/TwoPointers/next_permutation"
              }
            },
            {
              "unversionedId": "BitManipulation/power_of_2",
              "id": "BitManipulation/power_of_2",
              "title": "power_of_2",
              "description": "",
              "source": "@site/docs/BitManipulation/power_of_2.mdx",
              "sourceDirName": "BitManipulation",
              "slug": "/BitManipulation/power_of_2",
              "permalink": "/docs/BitManipulation/power_of_2",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/BitManipulation/power_of_2.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Segment Trees",
                "permalink": "/docs/SegmentTrees/intro"
              },
              "next": {
                "title": "lfu_cache",
                "permalink": "/docs/Design/lfu_cache"
              }
            },
            {
              "unversionedId": "Design/lfu_cache",
              "id": "Design/lfu_cache",
              "title": "lfu_cache",
              "description": "",
              "source": "@site/docs/Design/lfu_cache.mdx",
              "sourceDirName": "Design",
              "slug": "/Design/lfu_cache",
              "permalink": "/docs/Design/lfu_cache",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Design/lfu_cache.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "power_of_2",
                "permalink": "/docs/BitManipulation/power_of_2"
              },
              "next": {
                "title": "lru_cache",
                "permalink": "/docs/Design/lru_cache"
              }
            },
            {
              "unversionedId": "Design/lru_cache",
              "id": "Design/lru_cache",
              "title": "lru_cache",
              "description": "",
              "source": "@site/docs/Design/lru_cache.mdx",
              "sourceDirName": "Design",
              "slug": "/Design/lru_cache",
              "permalink": "/docs/Design/lru_cache",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Design/lru_cache.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "lfu_cache",
                "permalink": "/docs/Design/lfu_cache"
              },
              "next": {
                "title": "min_stack",
                "permalink": "/docs/Design/min_stack"
              }
            },
            {
              "unversionedId": "Design/min_stack",
              "id": "Design/min_stack",
              "title": "min_stack",
              "description": "",
              "source": "@site/docs/Design/min_stack.mdx",
              "sourceDirName": "Design",
              "slug": "/Design/min_stack",
              "permalink": "/docs/Design/min_stack",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Design/min_stack.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "lru_cache",
                "permalink": "/docs/Design/lru_cache"
              },
              "next": {
                "title": "time-based-key-value-store",
                "permalink": "/docs/Design/time-based-key-value-store"
              }
            },
            {
              "unversionedId": "Design/time-based-key-value-store",
              "id": "Design/time-based-key-value-store",
              "title": "time-based-key-value-store",
              "description": "",
              "source": "@site/docs/Design/time-based-key-value-store.mdx",
              "sourceDirName": "Design",
              "slug": "/Design/time-based-key-value-store",
              "permalink": "/docs/Design/time-based-key-value-store",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Design/time-based-key-value-store.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "min_stack",
                "permalink": "/docs/Design/min_stack"
              },
              "next": {
                "title": "Detect cycle in a directed graph",
                "permalink": "/docs/Graph/CycleDetection/directed_graph"
              }
            },
            {
              "unversionedId": "DynamicProgramming/1D-DP/coin_change",
              "id": "DynamicProgramming/1D-DP/coin_change",
              "title": "coin_change",
              "description": "Recursive Code",
              "source": "@site/docs/DynamicProgramming/1D-DP/coin_change.mdx",
              "sourceDirName": "DynamicProgramming/1D-DP",
              "slug": "/DynamicProgramming/1D-DP/coin_change",
              "permalink": "/docs/DynamicProgramming/1D-DP/coin_change",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/DynamicProgramming/1D-DP/coin_change.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Jump Game",
                "permalink": "/docs/DynamicProgramming/1D-DP/jump_game"
              },
              "next": {
                "title": "decode_ways",
                "permalink": "/docs/DynamicProgramming/1D-DP/decode_ways"
              }
            },
            {
              "unversionedId": "DynamicProgramming/1D-DP/decode_ways",
              "id": "DynamicProgramming/1D-DP/decode_ways",
              "title": "decode_ways",
              "description": "recursive method",
              "source": "@site/docs/DynamicProgramming/1D-DP/decode_ways.mdx",
              "sourceDirName": "DynamicProgramming/1D-DP",
              "slug": "/DynamicProgramming/1D-DP/decode_ways",
              "permalink": "/docs/DynamicProgramming/1D-DP/decode_ways",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/DynamicProgramming/1D-DP/decode_ways.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "coin_change",
                "permalink": "/docs/DynamicProgramming/1D-DP/coin_change"
              },
              "next": {
                "title": "Maximum Length of Repeated Subarray",
                "permalink": "/docs/DynamicProgramming/2D-DP/maxlen_repeated_subarray"
              }
            },
            {
              "unversionedId": "DynamicProgramming/1D-DP/jump_game",
              "id": "DynamicProgramming/1D-DP/jump_game",
              "title": "Jump Game",
              "description": "Level - Medium",
              "source": "@site/docs/DynamicProgramming/1D-DP/jump_game.mdx",
              "sourceDirName": "DynamicProgramming/1D-DP",
              "slug": "/DynamicProgramming/1D-DP/jump_game",
              "permalink": "/docs/DynamicProgramming/1D-DP/jump_game",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/DynamicProgramming/1D-DP/jump_game.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 3,
              "frontMatter": {
                "sidebar_position": 3,
                "title": "Jump Game"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Longest Increasing Subsequence",
                "permalink": "/docs/DynamicProgramming/1D-DP/longest_increasing_subsequence"
              },
              "next": {
                "title": "coin_change",
                "permalink": "/docs/DynamicProgramming/1D-DP/coin_change"
              }
            },
            {
              "unversionedId": "DynamicProgramming/1D-DP/longest_increasing_subsequence",
              "id": "DynamicProgramming/1D-DP/longest_increasing_subsequence",
              "title": "Longest Increasing Subsequence",
              "description": "Level - Medium",
              "source": "@site/docs/DynamicProgramming/1D-DP/longest_increasing_subsequence.mdx",
              "sourceDirName": "DynamicProgramming/1D-DP",
              "slug": "/DynamicProgramming/1D-DP/longest_increasing_subsequence",
              "permalink": "/docs/DynamicProgramming/1D-DP/longest_increasing_subsequence",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/DynamicProgramming/1D-DP/longest_increasing_subsequence.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 2,
              "frontMatter": {
                "sidebar_position": 2,
                "title": "Longest Increasing Subsequence"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Unique Binary Search Trees / Catalan Numbers",
                "permalink": "/docs/DynamicProgramming/1D-DP/unique_binary_search_trees"
              },
              "next": {
                "title": "Jump Game",
                "permalink": "/docs/DynamicProgramming/1D-DP/jump_game"
              }
            },
            {
              "unversionedId": "DynamicProgramming/1D-DP/unique_binary_search_trees",
              "id": "DynamicProgramming/1D-DP/unique_binary_search_trees",
              "title": "Unique Binary Search Trees / Catalan Numbers",
              "description": "Level - Medium",
              "source": "@site/docs/DynamicProgramming/1D-DP/unique_binary_search_trees.mdx",
              "sourceDirName": "DynamicProgramming/1D-DP",
              "slug": "/DynamicProgramming/1D-DP/unique_binary_search_trees",
              "permalink": "/docs/DynamicProgramming/1D-DP/unique_binary_search_trees",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/DynamicProgramming/1D-DP/unique_binary_search_trees.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1,
                "title": "Unique Binary Search Trees / Catalan Numbers"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Frog Jump",
                "permalink": "/docs/DynamicProgramming/frog_jump"
              },
              "next": {
                "title": "Longest Increasing Subsequence",
                "permalink": "/docs/DynamicProgramming/1D-DP/longest_increasing_subsequence"
              }
            },
            {
              "unversionedId": "DynamicProgramming/2D-DP/maxlen_repeated_subarray",
              "id": "DynamicProgramming/2D-DP/maxlen_repeated_subarray",
              "title": "Maximum Length of Repeated Subarray",
              "description": "Level - Medium",
              "source": "@site/docs/DynamicProgramming/2D-DP/maxlen_repeated_subarray.mdx",
              "sourceDirName": "DynamicProgramming/2D-DP",
              "slug": "/DynamicProgramming/2D-DP/maxlen_repeated_subarray",
              "permalink": "/docs/DynamicProgramming/2D-DP/maxlen_repeated_subarray",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/DynamicProgramming/2D-DP/maxlen_repeated_subarray.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 5,
              "frontMatter": {
                "sidebar_position": 5,
                "title": "Maximum Length of Repeated Subarray"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "decode_ways",
                "permalink": "/docs/DynamicProgramming/1D-DP/decode_ways"
              },
              "next": {
                "title": "minimum-difficulty-of-a-job-schedule",
                "permalink": "/docs/DynamicProgramming/2D-DP/minimum-difficulty-of-a-job-schedule"
              }
            },
            {
              "unversionedId": "DynamicProgramming/2D-DP/minimum-difficulty-of-a-job-schedule",
              "id": "DynamicProgramming/2D-DP/minimum-difficulty-of-a-job-schedule",
              "title": "minimum-difficulty-of-a-job-schedule",
              "description": "",
              "source": "@site/docs/DynamicProgramming/2D-DP/minimum-difficulty-of-a-job-schedule.mdx",
              "sourceDirName": "DynamicProgramming/2D-DP",
              "slug": "/DynamicProgramming/2D-DP/minimum-difficulty-of-a-job-schedule",
              "permalink": "/docs/DynamicProgramming/2D-DP/minimum-difficulty-of-a-job-schedule",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/DynamicProgramming/2D-DP/minimum-difficulty-of-a-job-schedule.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Maximum Length of Repeated Subarray",
                "permalink": "/docs/DynamicProgramming/2D-DP/maxlen_repeated_subarray"
              },
              "next": {
                "title": "Best Time to Buy and Sell Stock",
                "permalink": "/docs/DynamicProgramming/BuySellStocks/buy_sell_stocks_1"
              }
            },
            {
              "unversionedId": "DynamicProgramming/BuySellStocks/buy_sell_stocks_1",
              "id": "DynamicProgramming/BuySellStocks/buy_sell_stocks_1",
              "title": "Best Time to Buy and Sell Stock",
              "description": "Level - Easy",
              "source": "@site/docs/DynamicProgramming/BuySellStocks/buy_sell_stocks_1.mdx",
              "sourceDirName": "DynamicProgramming/BuySellStocks",
              "slug": "/DynamicProgramming/BuySellStocks/buy_sell_stocks_1",
              "permalink": "/docs/DynamicProgramming/BuySellStocks/buy_sell_stocks_1",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/DynamicProgramming/BuySellStocks/buy_sell_stocks_1.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1,
                "title": "Best Time to Buy and Sell Stock"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "minimum-difficulty-of-a-job-schedule",
                "permalink": "/docs/DynamicProgramming/2D-DP/minimum-difficulty-of-a-job-schedule"
              },
              "next": {
                "title": "Best Time to Buy and Sell Stock II",
                "permalink": "/docs/DynamicProgramming/BuySellStocks/buy_sell_stocks_2"
              }
            },
            {
              "unversionedId": "DynamicProgramming/BuySellStocks/buy_sell_stocks_2",
              "id": "DynamicProgramming/BuySellStocks/buy_sell_stocks_2",
              "title": "Best Time to Buy and Sell Stock II",
              "description": "Level - Medium",
              "source": "@site/docs/DynamicProgramming/BuySellStocks/buy_sell_stocks_2.mdx",
              "sourceDirName": "DynamicProgramming/BuySellStocks",
              "slug": "/DynamicProgramming/BuySellStocks/buy_sell_stocks_2",
              "permalink": "/docs/DynamicProgramming/BuySellStocks/buy_sell_stocks_2",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/DynamicProgramming/BuySellStocks/buy_sell_stocks_2.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 2,
              "frontMatter": {
                "sidebar_position": 2,
                "title": "Best Time to Buy and Sell Stock II"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Best Time to Buy and Sell Stock",
                "permalink": "/docs/DynamicProgramming/BuySellStocks/buy_sell_stocks_1"
              },
              "next": {
                "title": "Best Time to Buy and Sell Stock III",
                "permalink": "/docs/DynamicProgramming/BuySellStocks/buy_sell_stocks_3"
              }
            },
            {
              "unversionedId": "DynamicProgramming/BuySellStocks/buy_sell_stocks_3",
              "id": "DynamicProgramming/BuySellStocks/buy_sell_stocks_3",
              "title": "Best Time to Buy and Sell Stock III",
              "description": "Level - Hard",
              "source": "@site/docs/DynamicProgramming/BuySellStocks/buy_sell_stocks_3.mdx",
              "sourceDirName": "DynamicProgramming/BuySellStocks",
              "slug": "/DynamicProgramming/BuySellStocks/buy_sell_stocks_3",
              "permalink": "/docs/DynamicProgramming/BuySellStocks/buy_sell_stocks_3",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/DynamicProgramming/BuySellStocks/buy_sell_stocks_3.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 3,
              "frontMatter": {
                "sidebar_position": 3,
                "title": "Best Time to Buy and Sell Stock III"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Best Time to Buy and Sell Stock II",
                "permalink": "/docs/DynamicProgramming/BuySellStocks/buy_sell_stocks_2"
              },
              "next": {
                "title": "buy_sell_stocks_4",
                "permalink": "/docs/DynamicProgramming/BuySellStocks/buy_sell_stocks_4"
              }
            },
            {
              "unversionedId": "DynamicProgramming/BuySellStocks/buy_sell_stocks_4",
              "id": "DynamicProgramming/BuySellStocks/buy_sell_stocks_4",
              "title": "buy_sell_stocks_4",
              "description": "",
              "source": "@site/docs/DynamicProgramming/BuySellStocks/buy_sell_stocks_4.mdx",
              "sourceDirName": "DynamicProgramming/BuySellStocks",
              "slug": "/DynamicProgramming/BuySellStocks/buy_sell_stocks_4",
              "permalink": "/docs/DynamicProgramming/BuySellStocks/buy_sell_stocks_4",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/DynamicProgramming/BuySellStocks/buy_sell_stocks_4.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Best Time to Buy and Sell Stock III",
                "permalink": "/docs/DynamicProgramming/BuySellStocks/buy_sell_stocks_3"
              },
              "next": {
                "title": "Count Square Submatrices with All Ones",
                "permalink": "/docs/DynamicProgramming/DP-Rectangle/count-square-submatrices-with-all-ones"
              }
            },
            {
              "unversionedId": "DynamicProgramming/DP-Rectangle/count-square-submatrices-with-all-ones",
              "id": "DynamicProgramming/DP-Rectangle/count-square-submatrices-with-all-ones",
              "title": "Count Square Submatrices with All Ones",
              "description": "Level - Medium",
              "source": "@site/docs/DynamicProgramming/DP-Rectangle/count-square-submatrices-with-all-ones.mdx",
              "sourceDirName": "DynamicProgramming/DP-Rectangle",
              "slug": "/DynamicProgramming/DP-Rectangle/count-square-submatrices-with-all-ones",
              "permalink": "/docs/DynamicProgramming/DP-Rectangle/count-square-submatrices-with-all-ones",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/DynamicProgramming/DP-Rectangle/count-square-submatrices-with-all-ones.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1,
                "title": "Count Square Submatrices with All Ones"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "buy_sell_stocks_4",
                "permalink": "/docs/DynamicProgramming/BuySellStocks/buy_sell_stocks_4"
              },
              "next": {
                "title": "Maximal Squares",
                "permalink": "/docs/DynamicProgramming/DP-Rectangle/maximal_square"
              }
            },
            {
              "unversionedId": "DynamicProgramming/DP-Rectangle/maximal_rectangle",
              "id": "DynamicProgramming/DP-Rectangle/maximal_rectangle",
              "title": "maximal_rectangle",
              "description": "",
              "source": "@site/docs/DynamicProgramming/DP-Rectangle/maximal_rectangle.mdx",
              "sourceDirName": "DynamicProgramming/DP-Rectangle",
              "slug": "/DynamicProgramming/DP-Rectangle/maximal_rectangle",
              "permalink": "/docs/DynamicProgramming/DP-Rectangle/maximal_rectangle",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/DynamicProgramming/DP-Rectangle/maximal_rectangle.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Maximal Squares",
                "permalink": "/docs/DynamicProgramming/DP-Rectangle/maximal_square"
              },
              "next": {
                "title": "longest_common_subsequence",
                "permalink": "/docs/DynamicProgramming/DPStrings/longest_common_subsequence"
              }
            },
            {
              "unversionedId": "DynamicProgramming/DP-Rectangle/maximal_square",
              "id": "DynamicProgramming/DP-Rectangle/maximal_square",
              "title": "Maximal Squares",
              "description": "Level - Medium",
              "source": "@site/docs/DynamicProgramming/DP-Rectangle/maximal_square.mdx",
              "sourceDirName": "DynamicProgramming/DP-Rectangle",
              "slug": "/DynamicProgramming/DP-Rectangle/maximal_square",
              "permalink": "/docs/DynamicProgramming/DP-Rectangle/maximal_square",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/DynamicProgramming/DP-Rectangle/maximal_square.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 2,
              "frontMatter": {
                "sidebar_position": 2,
                "title": "Maximal Squares"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Count Square Submatrices with All Ones",
                "permalink": "/docs/DynamicProgramming/DP-Rectangle/count-square-submatrices-with-all-ones"
              },
              "next": {
                "title": "maximal_rectangle",
                "permalink": "/docs/DynamicProgramming/DP-Rectangle/maximal_rectangle"
              }
            },
            {
              "unversionedId": "DynamicProgramming/DPStrings/longest_common_subsequence",
              "id": "DynamicProgramming/DPStrings/longest_common_subsequence",
              "title": "longest_common_subsequence",
              "description": "",
              "source": "@site/docs/DynamicProgramming/DPStrings/longest_common_subsequence.mdx",
              "sourceDirName": "DynamicProgramming/DPStrings",
              "slug": "/DynamicProgramming/DPStrings/longest_common_subsequence",
              "permalink": "/docs/DynamicProgramming/DPStrings/longest_common_subsequence",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/DynamicProgramming/DPStrings/longest_common_subsequence.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "maximal_rectangle",
                "permalink": "/docs/DynamicProgramming/DP-Rectangle/maximal_rectangle"
              },
              "next": {
                "title": "longest_common_substring",
                "permalink": "/docs/DynamicProgramming/DPStrings/longest_common_substring"
              }
            },
            {
              "unversionedId": "DynamicProgramming/DPStrings/longest_common_substring",
              "id": "DynamicProgramming/DPStrings/longest_common_substring",
              "title": "longest_common_substring",
              "description": "",
              "source": "@site/docs/DynamicProgramming/DPStrings/longest_common_substring.mdx",
              "sourceDirName": "DynamicProgramming/DPStrings",
              "slug": "/DynamicProgramming/DPStrings/longest_common_substring",
              "permalink": "/docs/DynamicProgramming/DPStrings/longest_common_substring",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/DynamicProgramming/DPStrings/longest_common_substring.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "longest_common_subsequence",
                "permalink": "/docs/DynamicProgramming/DPStrings/longest_common_subsequence"
              },
              "next": {
                "title": "longest_valid_paranthesis",
                "permalink": "/docs/DynamicProgramming/DPStrings/longest_valid_paranthesis"
              }
            },
            {
              "unversionedId": "DynamicProgramming/DPStrings/longest_valid_paranthesis",
              "id": "DynamicProgramming/DPStrings/longest_valid_paranthesis",
              "title": "longest_valid_paranthesis",
              "description": "",
              "source": "@site/docs/DynamicProgramming/DPStrings/longest_valid_paranthesis.mdx",
              "sourceDirName": "DynamicProgramming/DPStrings",
              "slug": "/DynamicProgramming/DPStrings/longest_valid_paranthesis",
              "permalink": "/docs/DynamicProgramming/DPStrings/longest_valid_paranthesis",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/DynamicProgramming/DPStrings/longest_valid_paranthesis.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "longest_common_substring",
                "permalink": "/docs/DynamicProgramming/DPStrings/longest_common_substring"
              },
              "next": {
                "title": "product_except_self",
                "permalink": "/docs/DynamicProgramming/PreComputation/product_except_self"
              }
            },
            {
              "unversionedId": "DynamicProgramming/frog_jump",
              "id": "DynamicProgramming/frog_jump",
              "title": "Frog Jump",
              "description": "Level - Hard",
              "source": "@site/docs/DynamicProgramming/frog_jump.mdx",
              "sourceDirName": "DynamicProgramming",
              "slug": "/DynamicProgramming/frog_jump",
              "permalink": "/docs/DynamicProgramming/frog_jump",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/DynamicProgramming/frog_jump.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 4,
              "frontMatter": {
                "sidebar_position": 4,
                "title": "Frog Jump"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "DynamicProgramming",
                "permalink": "/docs/category/dynamicprogramming"
              },
              "next": {
                "title": "Unique Binary Search Trees / Catalan Numbers",
                "permalink": "/docs/DynamicProgramming/1D-DP/unique_binary_search_trees"
              }
            },
            {
              "unversionedId": "DynamicProgramming/PreComputation/product_except_self",
              "id": "DynamicProgramming/PreComputation/product_except_self",
              "title": "product_except_self",
              "description": "",
              "source": "@site/docs/DynamicProgramming/PreComputation/product_except_self.mdx",
              "sourceDirName": "DynamicProgramming/PreComputation",
              "slug": "/DynamicProgramming/PreComputation/product_except_self",
              "permalink": "/docs/DynamicProgramming/PreComputation/product_except_self",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/DynamicProgramming/PreComputation/product_except_self.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "longest_valid_paranthesis",
                "permalink": "/docs/DynamicProgramming/DPStrings/longest_valid_paranthesis"
              },
              "next": {
                "title": "Stack",
                "permalink": "/docs/category/stack"
              }
            },
            {
              "unversionedId": "Graph/clone_graph",
              "id": "Graph/clone_graph",
              "title": "clone_graph",
              "description": "",
              "source": "@site/docs/Graph/clone_graph.mdx",
              "sourceDirName": "Graph",
              "slug": "/Graph/clone_graph",
              "permalink": "/docs/Graph/clone_graph",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Graph/clone_graph.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "introduction",
                "permalink": "/docs/Graph/TopoSort/introduction"
              },
              "next": {
                "title": "is_graph_bipartite",
                "permalink": "/docs/Graph/is_graph_bipartite"
              }
            },
            {
              "unversionedId": "Graph/CycleDetection/directed_graph",
              "id": "Graph/CycleDetection/directed_graph",
              "title": "Detect cycle in a directed graph",
              "description": "Level - Medium",
              "source": "@site/docs/Graph/CycleDetection/directed_graph.mdx",
              "sourceDirName": "Graph/CycleDetection",
              "slug": "/Graph/CycleDetection/directed_graph",
              "permalink": "/docs/Graph/CycleDetection/directed_graph",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Graph/CycleDetection/directed_graph.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1,
                "title": "Detect cycle in a directed graph"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "time-based-key-value-store",
                "permalink": "/docs/Design/time-based-key-value-store"
              },
              "next": {
                "title": "Detect cycle in a undirected graph",
                "permalink": "/docs/Graph/CycleDetection/undirected_graph"
              }
            },
            {
              "unversionedId": "Graph/CycleDetection/undirected_graph",
              "id": "Graph/CycleDetection/undirected_graph",
              "title": "Detect cycle in a undirected graph",
              "description": "Level - Medium",
              "source": "@site/docs/Graph/CycleDetection/undirected_graph.mdx",
              "sourceDirName": "Graph/CycleDetection",
              "slug": "/Graph/CycleDetection/undirected_graph",
              "permalink": "/docs/Graph/CycleDetection/undirected_graph",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Graph/CycleDetection/undirected_graph.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 2,
              "frontMatter": {
                "sidebar_position": 2,
                "title": "Detect cycle in a undirected graph"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Detect cycle in a directed graph",
                "permalink": "/docs/Graph/CycleDetection/directed_graph"
              },
              "next": {
                "title": "Introduction to Disjoin Set Union",
                "permalink": "/docs/Graph/DisjointSetUnion/introduction"
              }
            },
            {
              "unversionedId": "Graph/DisjointSetUnion/introduction",
              "id": "Graph/DisjointSetUnion/introduction",
              "title": "Introduction to Disjoin Set Union",
              "description": "",
              "source": "@site/docs/Graph/DisjointSetUnion/introduction.mdx",
              "sourceDirName": "Graph/DisjointSetUnion",
              "slug": "/Graph/DisjointSetUnion/introduction",
              "permalink": "/docs/Graph/DisjointSetUnion/introduction",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Graph/DisjointSetUnion/introduction.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1,
                "title": "Introduction to Disjoin Set Union"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Detect cycle in a undirected graph",
                "permalink": "/docs/Graph/CycleDetection/undirected_graph"
              },
              "next": {
                "title": "Redundant Connection",
                "permalink": "/docs/Graph/DisjointSetUnion/redundant_connection"
              }
            },
            {
              "unversionedId": "Graph/DisjointSetUnion/number_of_operation",
              "id": "Graph/DisjointSetUnion/number_of_operation",
              "title": "Number of Operations to Make Network Connected",
              "description": "Level - Medium",
              "source": "@site/docs/Graph/DisjointSetUnion/number_of_operation.mdx",
              "sourceDirName": "Graph/DisjointSetUnion",
              "slug": "/Graph/DisjointSetUnion/number_of_operation",
              "permalink": "/docs/Graph/DisjointSetUnion/number_of_operation",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Graph/DisjointSetUnion/number_of_operation.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 3,
              "frontMatter": {
                "sidebar_position": 3,
                "title": "Number of Operations to Make Network Connected"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Redundant Connection",
                "permalink": "/docs/Graph/DisjointSetUnion/redundant_connection"
              },
              "next": {
                "title": "Introduction to Flood Fill Algorithm",
                "permalink": "/docs/Graph/FloodFill/introduction"
              }
            },
            {
              "unversionedId": "Graph/DisjointSetUnion/redundant_connection",
              "id": "Graph/DisjointSetUnion/redundant_connection",
              "title": "Redundant Connection",
              "description": "Level - Medium",
              "source": "@site/docs/Graph/DisjointSetUnion/redundant_connection.mdx",
              "sourceDirName": "Graph/DisjointSetUnion",
              "slug": "/Graph/DisjointSetUnion/redundant_connection",
              "permalink": "/docs/Graph/DisjointSetUnion/redundant_connection",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Graph/DisjointSetUnion/redundant_connection.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1,
                "title": "Redundant Connection"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Introduction to Disjoin Set Union",
                "permalink": "/docs/Graph/DisjointSetUnion/introduction"
              },
              "next": {
                "title": "Number of Operations to Make Network Connected",
                "permalink": "/docs/Graph/DisjointSetUnion/number_of_operation"
              }
            },
            {
              "unversionedId": "Graph/FloodFill/introduction",
              "id": "Graph/FloodFill/introduction",
              "title": "Introduction to Flood Fill Algorithm",
              "description": "Where we use flood fill algorithm ?",
              "source": "@site/docs/Graph/FloodFill/introduction.mdx",
              "sourceDirName": "Graph/FloodFill",
              "slug": "/Graph/FloodFill/introduction",
              "permalink": "/docs/Graph/FloodFill/introduction",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Graph/FloodFill/introduction.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1,
                "title": "Introduction to Flood Fill Algorithm"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Number of Operations to Make Network Connected",
                "permalink": "/docs/Graph/DisjointSetUnion/number_of_operation"
              },
              "next": {
                "title": "Pacific Atlantic Water Flow",
                "permalink": "/docs/Graph/FloodFill/pacific_atlantic_water_flow"
              }
            },
            {
              "unversionedId": "Graph/FloodFill/pacific_atlantic_water_flow",
              "id": "Graph/FloodFill/pacific_atlantic_water_flow",
              "title": "Pacific Atlantic Water Flow",
              "description": "",
              "source": "@site/docs/Graph/FloodFill/pacific_atlantic_water_flow.mdx",
              "sourceDirName": "Graph/FloodFill",
              "slug": "/Graph/FloodFill/pacific_atlantic_water_flow",
              "permalink": "/docs/Graph/FloodFill/pacific_atlantic_water_flow",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Graph/FloodFill/pacific_atlantic_water_flow.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1,
                "title": "Pacific Atlantic Water Flow"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Introduction to Flood Fill Algorithm",
                "permalink": "/docs/Graph/FloodFill/introduction"
              },
              "next": {
                "title": "Given a matrix of ‘O’ and ‘X’, replace ‘O’ with ‘X’ if surrounded by ‘X’",
                "permalink": "/docs/Graph/FloodFill/replace_o_x_surrounded_x"
              }
            },
            {
              "unversionedId": "Graph/FloodFill/replace_o_x_surrounded_x",
              "id": "Graph/FloodFill/replace_o_x_surrounded_x",
              "title": "Given a matrix of ‘O’ and ‘X’, replace ‘O’ with ‘X’ if surrounded by ‘X’",
              "description": "Statement",
              "source": "@site/docs/Graph/FloodFill/replace_o_x_surrounded_x.mdx",
              "sourceDirName": "Graph/FloodFill",
              "slug": "/Graph/FloodFill/replace_o_x_surrounded_x",
              "permalink": "/docs/Graph/FloodFill/replace_o_x_surrounded_x",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Graph/FloodFill/replace_o_x_surrounded_x.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1,
                "title": "Given a matrix of ‘O’ and ‘X’, replace ‘O’ with ‘X’ if surrounded by ‘X’"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Pacific Atlantic Water Flow",
                "permalink": "/docs/Graph/FloodFill/pacific_atlantic_water_flow"
              },
              "next": {
                "title": "Introduction of Dijkstra's algorithm",
                "permalink": "/docs/Graph/ShortestPath/Dijkstra/introduction"
              }
            },
            {
              "unversionedId": "Graph/is_graph_bipartite",
              "id": "Graph/is_graph_bipartite",
              "title": "is_graph_bipartite",
              "description": "",
              "source": "@site/docs/Graph/is_graph_bipartite.mdx",
              "sourceDirName": "Graph",
              "slug": "/Graph/is_graph_bipartite",
              "permalink": "/docs/Graph/is_graph_bipartite",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Graph/is_graph_bipartite.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "clone_graph",
                "permalink": "/docs/Graph/clone_graph"
              },
              "next": {
                "title": "Gas Station",
                "permalink": "/docs/Greedy/gas_station"
              }
            },
            {
              "unversionedId": "Graph/ShortestPath/Dijkstra/cheapest-flights-within-k-stops",
              "id": "Graph/ShortestPath/Dijkstra/cheapest-flights-within-k-stops",
              "title": "cheapest-flights-within-k-stops",
              "description": "",
              "source": "@site/docs/Graph/ShortestPath/Dijkstra/cheapest-flights-within-k-stops.mdx",
              "sourceDirName": "Graph/ShortestPath/Dijkstra",
              "slug": "/Graph/ShortestPath/Dijkstra/cheapest-flights-within-k-stops",
              "permalink": "/docs/Graph/ShortestPath/Dijkstra/cheapest-flights-within-k-stops",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Graph/ShortestPath/Dijkstra/cheapest-flights-within-k-stops.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Network Delay Time",
                "permalink": "/docs/Graph/ShortestPath/Dijkstra/network_delay_time"
              },
              "next": {
                "title": "introduction",
                "permalink": "/docs/Graph/TarjanAlgo/introduction"
              }
            },
            {
              "unversionedId": "Graph/ShortestPath/Dijkstra/introduction",
              "id": "Graph/ShortestPath/Dijkstra/introduction",
              "title": "Introduction of Dijkstra's algorithm",
              "description": "Why Dijkstra's algorithm Exist ?",
              "source": "@site/docs/Graph/ShortestPath/Dijkstra/introduction.mdx",
              "sourceDirName": "Graph/ShortestPath/Dijkstra",
              "slug": "/Graph/ShortestPath/Dijkstra/introduction",
              "permalink": "/docs/Graph/ShortestPath/Dijkstra/introduction",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Graph/ShortestPath/Dijkstra/introduction.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1,
                "title": "Introduction of Dijkstra's algorithm"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Given a matrix of ‘O’ and ‘X’, replace ‘O’ with ‘X’ if surrounded by ‘X’",
                "permalink": "/docs/Graph/FloodFill/replace_o_x_surrounded_x"
              },
              "next": {
                "title": "Network Delay Time",
                "permalink": "/docs/Graph/ShortestPath/Dijkstra/network_delay_time"
              }
            },
            {
              "unversionedId": "Graph/ShortestPath/Dijkstra/network_delay_time",
              "id": "Graph/ShortestPath/Dijkstra/network_delay_time",
              "title": "Network Delay Time",
              "description": "Level - Medium",
              "source": "@site/docs/Graph/ShortestPath/Dijkstra/network_delay_time.mdx",
              "sourceDirName": "Graph/ShortestPath/Dijkstra",
              "slug": "/Graph/ShortestPath/Dijkstra/network_delay_time",
              "permalink": "/docs/Graph/ShortestPath/Dijkstra/network_delay_time",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Graph/ShortestPath/Dijkstra/network_delay_time.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 2,
              "frontMatter": {
                "sidebar_position": 2,
                "title": "Network Delay Time"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Introduction of Dijkstra's algorithm",
                "permalink": "/docs/Graph/ShortestPath/Dijkstra/introduction"
              },
              "next": {
                "title": "cheapest-flights-within-k-stops",
                "permalink": "/docs/Graph/ShortestPath/Dijkstra/cheapest-flights-within-k-stops"
              }
            },
            {
              "unversionedId": "Graph/TarjanAlgo/introduction",
              "id": "Graph/TarjanAlgo/introduction",
              "title": "introduction",
              "description": "",
              "source": "@site/docs/Graph/TarjanAlgo/introduction.mdx",
              "sourceDirName": "Graph/TarjanAlgo",
              "slug": "/Graph/TarjanAlgo/introduction",
              "permalink": "/docs/Graph/TarjanAlgo/introduction",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Graph/TarjanAlgo/introduction.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "cheapest-flights-within-k-stops",
                "permalink": "/docs/Graph/ShortestPath/Dijkstra/cheapest-flights-within-k-stops"
              },
              "next": {
                "title": "introduction",
                "permalink": "/docs/Graph/TopoSort/introduction"
              }
            },
            {
              "unversionedId": "Graph/TopoSort/introduction",
              "id": "Graph/TopoSort/introduction",
              "title": "introduction",
              "description": "",
              "source": "@site/docs/Graph/TopoSort/introduction.mdx",
              "sourceDirName": "Graph/TopoSort",
              "slug": "/Graph/TopoSort/introduction",
              "permalink": "/docs/Graph/TopoSort/introduction",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Graph/TopoSort/introduction.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "introduction",
                "permalink": "/docs/Graph/TarjanAlgo/introduction"
              },
              "next": {
                "title": "clone_graph",
                "permalink": "/docs/Graph/clone_graph"
              }
            },
            {
              "unversionedId": "Greedy/gas_station",
              "id": "Greedy/gas_station",
              "title": "Gas Station",
              "description": "Level - Medium",
              "source": "@site/docs/Greedy/gas_station.mdx",
              "sourceDirName": "Greedy",
              "slug": "/Greedy/gas_station",
              "permalink": "/docs/Greedy/gas_station",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Greedy/gas_station.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1,
                "title": "Gas Station"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "is_graph_bipartite",
                "permalink": "/docs/Graph/is_graph_bipartite"
              },
              "next": {
                "title": "Maximum no of 1's row",
                "permalink": "/docs/Greedy/max_number_1s"
              }
            },
            {
              "unversionedId": "Greedy/jump_game",
              "id": "Greedy/jump_game",
              "title": "jump_game",
              "description": "",
              "source": "@site/docs/Greedy/jump_game.mdx",
              "sourceDirName": "Greedy",
              "slug": "/Greedy/jump_game",
              "permalink": "/docs/Greedy/jump_game",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Greedy/jump_game.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Maximum no of 1's row",
                "permalink": "/docs/Greedy/max_number_1s"
              },
              "next": {
                "title": "max_events_canbe_attended",
                "permalink": "/docs/Greedy/max_events_canbe_attended"
              }
            },
            {
              "unversionedId": "Greedy/max_events_canbe_attended",
              "id": "Greedy/max_events_canbe_attended",
              "title": "max_events_canbe_attended",
              "description": "",
              "source": "@site/docs/Greedy/max_events_canbe_attended.mdx",
              "sourceDirName": "Greedy",
              "slug": "/Greedy/max_events_canbe_attended",
              "permalink": "/docs/Greedy/max_events_canbe_attended",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Greedy/max_events_canbe_attended.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "jump_game",
                "permalink": "/docs/Greedy/jump_game"
              },
              "next": {
                "title": "min_cost_leaf_values",
                "permalink": "/docs/Greedy/min_cost_leaf_values"
              }
            },
            {
              "unversionedId": "Greedy/max_number_1s",
              "id": "Greedy/max_number_1s",
              "title": "Maximum no of 1's row",
              "description": "Level - Medium",
              "source": "@site/docs/Greedy/max_number_1s.mdx",
              "sourceDirName": "Greedy",
              "slug": "/Greedy/max_number_1s",
              "permalink": "/docs/Greedy/max_number_1s",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Greedy/max_number_1s.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1,
                "title": "Maximum no of 1's row"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Gas Station",
                "permalink": "/docs/Greedy/gas_station"
              },
              "next": {
                "title": "jump_game",
                "permalink": "/docs/Greedy/jump_game"
              }
            },
            {
              "unversionedId": "Greedy/min_cost_leaf_values",
              "id": "Greedy/min_cost_leaf_values",
              "title": "min_cost_leaf_values",
              "description": "Brute Force Approach",
              "source": "@site/docs/Greedy/min_cost_leaf_values.mdx",
              "sourceDirName": "Greedy",
              "slug": "/Greedy/min_cost_leaf_values",
              "permalink": "/docs/Greedy/min_cost_leaf_values",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Greedy/min_cost_leaf_values.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "max_events_canbe_attended",
                "permalink": "/docs/Greedy/max_events_canbe_attended"
              },
              "next": {
                "title": "min_time_to_make_rope_colorful",
                "permalink": "/docs/Greedy/min_time_to_make_rope_colorful"
              }
            },
            {
              "unversionedId": "Greedy/min_time_to_make_rope_colorful",
              "id": "Greedy/min_time_to_make_rope_colorful",
              "title": "min_time_to_make_rope_colorful",
              "description": "",
              "source": "@site/docs/Greedy/min_time_to_make_rope_colorful.mdx",
              "sourceDirName": "Greedy",
              "slug": "/Greedy/min_time_to_make_rope_colorful",
              "permalink": "/docs/Greedy/min_time_to_make_rope_colorful",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Greedy/min_time_to_make_rope_colorful.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "min_cost_leaf_values",
                "permalink": "/docs/Greedy/min_cost_leaf_values"
              },
              "next": {
                "title": "minimum-deletions-to-make-character-frequencies-unique",
                "permalink": "/docs/Greedy/minimum-deletions-to-make-character-frequencies-unique"
              }
            },
            {
              "unversionedId": "Greedy/minimum-deletions-to-make-character-frequencies-unique",
              "id": "Greedy/minimum-deletions-to-make-character-frequencies-unique",
              "title": "minimum-deletions-to-make-character-frequencies-unique",
              "description": "",
              "source": "@site/docs/Greedy/minimum-deletions-to-make-character-frequencies-unique.mdx",
              "sourceDirName": "Greedy",
              "slug": "/Greedy/minimum-deletions-to-make-character-frequencies-unique",
              "permalink": "/docs/Greedy/minimum-deletions-to-make-character-frequencies-unique",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Greedy/minimum-deletions-to-make-character-frequencies-unique.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "min_time_to_make_rope_colorful",
                "permalink": "/docs/Greedy/min_time_to_make_rope_colorful"
              },
              "next": {
                "title": "non_overlapping_intervals",
                "permalink": "/docs/Greedy/non_overlapping_intervals"
              }
            },
            {
              "unversionedId": "Greedy/non_overlapping_intervals",
              "id": "Greedy/non_overlapping_intervals",
              "title": "non_overlapping_intervals",
              "description": "",
              "source": "@site/docs/Greedy/non_overlapping_intervals.mdx",
              "sourceDirName": "Greedy",
              "slug": "/Greedy/non_overlapping_intervals",
              "permalink": "/docs/Greedy/non_overlapping_intervals",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Greedy/non_overlapping_intervals.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "minimum-deletions-to-make-character-frequencies-unique",
                "permalink": "/docs/Greedy/minimum-deletions-to-make-character-frequencies-unique"
              },
              "next": {
                "title": "Introduction to Heap Data Structure",
                "permalink": "/docs/Heap/introduction"
              }
            },
            {
              "unversionedId": "HashMaps/first_unique_character_in_string",
              "id": "HashMaps/first_unique_character_in_string",
              "title": "First Unique Character in a String",
              "description": "Level - Easy",
              "source": "@site/docs/HashMaps/first_unique_character_in_string.mdx",
              "sourceDirName": "HashMaps",
              "slug": "/HashMaps/first_unique_character_in_string",
              "permalink": "/docs/HashMaps/first_unique_character_in_string",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/HashMaps/first_unique_character_in_string.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1,
                "title": "First Unique Character in a String"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "HashMaps",
                "permalink": "/docs/category/hashmaps"
              },
              "next": {
                "title": "introduction",
                "permalink": "/docs/HashMaps/introduction"
              }
            },
            {
              "unversionedId": "HashMaps/introduction",
              "id": "HashMaps/introduction",
              "title": "introduction",
              "description": "",
              "source": "@site/docs/HashMaps/introduction.mdx",
              "sourceDirName": "HashMaps",
              "slug": "/HashMaps/introduction",
              "permalink": "/docs/HashMaps/introduction",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/HashMaps/introduction.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "First Unique Character in a String",
                "permalink": "/docs/HashMaps/first_unique_character_in_string"
              },
              "next": {
                "title": "top_k_freq",
                "permalink": "/docs/HashMaps/top_k_freq"
              }
            },
            {
              "unversionedId": "HashMaps/top_k_freq",
              "id": "HashMaps/top_k_freq",
              "title": "top_k_freq",
              "description": "",
              "source": "@site/docs/HashMaps/top_k_freq.mdx",
              "sourceDirName": "HashMaps",
              "slug": "/HashMaps/top_k_freq",
              "permalink": "/docs/HashMaps/top_k_freq",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/HashMaps/top_k_freq.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "introduction",
                "permalink": "/docs/HashMaps/introduction"
              },
              "next": {
                "title": "LinkedList",
                "permalink": "/docs/category/linkedlist"
              }
            },
            {
              "unversionedId": "Heap/Heap/median_stream",
              "id": "Heap/Heap/median_stream",
              "title": "median_stream",
              "description": "",
              "source": "@site/docs/Heap/2-Heap/median_stream.mdx",
              "sourceDirName": "Heap/2-Heap",
              "slug": "/Heap/Heap/median_stream",
              "permalink": "/docs/Heap/Heap/median_stream",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Heap/2-Heap/median_stream.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Introduction to Heap Data Structure",
                "permalink": "/docs/Heap/introduction"
              },
              "next": {
                "title": "Find K Closest Elements",
                "permalink": "/docs/Heap/PriorityQueue/k-closest-points"
              }
            },
            {
              "unversionedId": "Heap/introduction",
              "id": "Heap/introduction",
              "title": "Introduction to Heap Data Structure",
              "description": "what is heap data structure ?",
              "source": "@site/docs/Heap/introduction.mdx",
              "sourceDirName": "Heap",
              "slug": "/Heap/introduction",
              "permalink": "/docs/Heap/introduction",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Heap/introduction.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1,
                "title": "Introduction to Heap Data Structure"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "non_overlapping_intervals",
                "permalink": "/docs/Greedy/non_overlapping_intervals"
              },
              "next": {
                "title": "median_stream",
                "permalink": "/docs/Heap/Heap/median_stream"
              }
            },
            {
              "unversionedId": "Heap/PriorityQueue/k-closest-points",
              "id": "Heap/PriorityQueue/k-closest-points",
              "title": "Find K Closest Elements",
              "description": "Level - Medium",
              "source": "@site/docs/Heap/PriorityQueue/k-closest-points.mdx",
              "sourceDirName": "Heap/PriorityQueue",
              "slug": "/Heap/PriorityQueue/k-closest-points",
              "permalink": "/docs/Heap/PriorityQueue/k-closest-points",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Heap/PriorityQueue/k-closest-points.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1,
                "title": "Find K Closest Elements"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "median_stream",
                "permalink": "/docs/Heap/Heap/median_stream"
              },
              "next": {
                "title": "Permutation Sequence",
                "permalink": "/docs/Maths/permutation_sequence"
              }
            },
            {
              "unversionedId": "intro",
              "id": "intro",
              "title": "Introduction",
              "description": "What is the aim of Sde Babu Content ?",
              "source": "@site/docs/intro.md",
              "sourceDirName": ".",
              "slug": "/intro",
              "permalink": "/docs/intro",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/intro.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1
              },
              "sidebar": "tutorialSidebar",
              "next": {
                "title": "HashMaps",
                "permalink": "/docs/category/hashmaps"
              }
            },
            {
              "unversionedId": "LinkedList/Basic/merge_2_sorted_list",
              "id": "LinkedList/Basic/merge_2_sorted_list",
              "title": "merge_2_sorted_list",
              "description": "",
              "source": "@site/docs/LinkedList/Basic/merge_2_sorted_list.mdx",
              "sourceDirName": "LinkedList/Basic",
              "slug": "/LinkedList/Basic/merge_2_sorted_list",
              "permalink": "/docs/LinkedList/Basic/merge_2_sorted_list",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/LinkedList/Basic/merge_2_sorted_list.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Reverse Linked List 2",
                "permalink": "/docs/LinkedList/Basic/reverse_linked_list"
              },
              "next": {
                "title": "reorder_list",
                "permalink": "/docs/LinkedList/Basic/reorder_list"
              }
            },
            {
              "unversionedId": "LinkedList/Basic/reorder_list",
              "id": "LinkedList/Basic/reorder_list",
              "title": "reorder_list",
              "description": "",
              "source": "@site/docs/LinkedList/Basic/reorder_list.mdx",
              "sourceDirName": "LinkedList/Basic",
              "slug": "/LinkedList/Basic/reorder_list",
              "permalink": "/docs/LinkedList/Basic/reorder_list",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/LinkedList/Basic/reorder_list.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "merge_2_sorted_list",
                "permalink": "/docs/LinkedList/Basic/merge_2_sorted_list"
              },
              "next": {
                "title": "swap_nodes_in_pair",
                "permalink": "/docs/LinkedList/Basic/swap_nodes_in_pair"
              }
            },
            {
              "unversionedId": "LinkedList/Basic/reverse_linked_list",
              "id": "LinkedList/Basic/reverse_linked_list",
              "title": "Reverse Linked List 2",
              "description": "Level - Medium",
              "source": "@site/docs/LinkedList/Basic/reverse_linked_list.mdx",
              "sourceDirName": "LinkedList/Basic",
              "slug": "/LinkedList/Basic/reverse_linked_list",
              "permalink": "/docs/LinkedList/Basic/reverse_linked_list",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/LinkedList/Basic/reverse_linked_list.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 6,
              "frontMatter": {
                "sidebar_position": 6,
                "title": "Reverse Linked List 2"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Remove Nth Node From End of List",
                "permalink": "/docs/LinkedList/remove_nth_node_from_end"
              },
              "next": {
                "title": "merge_2_sorted_list",
                "permalink": "/docs/LinkedList/Basic/merge_2_sorted_list"
              }
            },
            {
              "unversionedId": "LinkedList/Basic/swap_nodes_in_pair",
              "id": "LinkedList/Basic/swap_nodes_in_pair",
              "title": "swap_nodes_in_pair",
              "description": "",
              "source": "@site/docs/LinkedList/Basic/swap_nodes_in_pair.mdx",
              "sourceDirName": "LinkedList/Basic",
              "slug": "/LinkedList/Basic/swap_nodes_in_pair",
              "permalink": "/docs/LinkedList/Basic/swap_nodes_in_pair",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/LinkedList/Basic/swap_nodes_in_pair.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "reorder_list",
                "permalink": "/docs/LinkedList/Basic/reorder_list"
              },
              "next": {
                "title": "first_node_in_cycle",
                "permalink": "/docs/LinkedList/ListCycle/first_node_in_cycle"
              }
            },
            {
              "unversionedId": "LinkedList/copy_list_random_pointer",
              "id": "LinkedList/copy_list_random_pointer",
              "title": "Copy List with Random Pointer",
              "description": "Level - Medium",
              "source": "@site/docs/LinkedList/copy_list_random_pointer.mdx",
              "sourceDirName": "LinkedList",
              "slug": "/LinkedList/copy_list_random_pointer",
              "permalink": "/docs/LinkedList/copy_list_random_pointer",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/LinkedList/copy_list_random_pointer.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 8,
              "frontMatter": {
                "sidebar_position": 8,
                "title": "Copy List with Random Pointer"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Remove Duplicates from Sorted List II",
                "permalink": "/docs/LinkedList/remove_duplicate_2"
              },
              "next": {
                "title": "Remove Nth Node From End of List",
                "permalink": "/docs/LinkedList/remove_nth_node_from_end"
              }
            },
            {
              "unversionedId": "LinkedList/intersection_linked_list",
              "id": "LinkedList/intersection_linked_list",
              "title": "intersection_linked_list",
              "description": "",
              "source": "@site/docs/LinkedList/intersection_linked_list.mdx",
              "sourceDirName": "LinkedList",
              "slug": "/LinkedList/intersection_linked_list",
              "permalink": "/docs/LinkedList/intersection_linked_list",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/LinkedList/intersection_linked_list.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "add_number_2",
                "permalink": "/docs/LinkedList/Maths/add_number_2"
              },
              "next": {
                "title": "remove_duplicate_1",
                "permalink": "/docs/LinkedList/remove_duplicate_1"
              }
            },
            {
              "unversionedId": "LinkedList/ListCycle/first_node_in_cycle",
              "id": "LinkedList/ListCycle/first_node_in_cycle",
              "title": "first_node_in_cycle",
              "description": "",
              "source": "@site/docs/LinkedList/ListCycle/first_node_in_cycle.mdx",
              "sourceDirName": "LinkedList/ListCycle",
              "slug": "/LinkedList/ListCycle/first_node_in_cycle",
              "permalink": "/docs/LinkedList/ListCycle/first_node_in_cycle",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/LinkedList/ListCycle/first_node_in_cycle.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "swap_nodes_in_pair",
                "permalink": "/docs/LinkedList/Basic/swap_nodes_in_pair"
              },
              "next": {
                "title": "Add Two Numbers",
                "permalink": "/docs/LinkedList/Maths/add_two_numers"
              }
            },
            {
              "unversionedId": "LinkedList/Maths/add_number_2",
              "id": "LinkedList/Maths/add_number_2",
              "title": "add_number_2",
              "description": "",
              "source": "@site/docs/LinkedList/Maths/add_number_2.mdx",
              "sourceDirName": "LinkedList/Maths",
              "slug": "/LinkedList/Maths/add_number_2",
              "permalink": "/docs/LinkedList/Maths/add_number_2",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/LinkedList/Maths/add_number_2.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Add Two Numbers",
                "permalink": "/docs/LinkedList/Maths/add_two_numers"
              },
              "next": {
                "title": "intersection_linked_list",
                "permalink": "/docs/LinkedList/intersection_linked_list"
              }
            },
            {
              "unversionedId": "LinkedList/Maths/add_two_numers",
              "id": "LinkedList/Maths/add_two_numers",
              "title": "Add Two Numbers",
              "description": "Level - Medium",
              "source": "@site/docs/LinkedList/Maths/add_two_numers.mdx",
              "sourceDirName": "LinkedList/Maths",
              "slug": "/LinkedList/Maths/add_two_numers",
              "permalink": "/docs/LinkedList/Maths/add_two_numers",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/LinkedList/Maths/add_two_numers.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1,
                "title": "Add Two Numbers"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "first_node_in_cycle",
                "permalink": "/docs/LinkedList/ListCycle/first_node_in_cycle"
              },
              "next": {
                "title": "add_number_2",
                "permalink": "/docs/LinkedList/Maths/add_number_2"
              }
            },
            {
              "unversionedId": "LinkedList/odd_even",
              "id": "LinkedList/odd_even",
              "title": "Odd Even Linked List By Index",
              "description": "Level - Medium",
              "source": "@site/docs/LinkedList/odd_even.mdx",
              "sourceDirName": "LinkedList",
              "slug": "/LinkedList/odd_even",
              "permalink": "/docs/LinkedList/odd_even",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/LinkedList/odd_even.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 3,
              "frontMatter": {
                "sidebar_position": 3,
                "title": "Odd Even Linked List By Index"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Partition List",
                "permalink": "/docs/LinkedList/partition_list"
              },
              "next": {
                "title": "Segregate even and odd nodes in a Link List",
                "permalink": "/docs/LinkedList/segregate_even_odd"
              }
            },
            {
              "unversionedId": "LinkedList/partition_list",
              "id": "LinkedList/partition_list",
              "title": "Partition List",
              "description": "Level - Medium",
              "source": "@site/docs/LinkedList/partition_list.mdx",
              "sourceDirName": "LinkedList",
              "slug": "/LinkedList/partition_list",
              "permalink": "/docs/LinkedList/partition_list",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/LinkedList/partition_list.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 2,
              "frontMatter": {
                "sidebar_position": 2,
                "title": "Partition List"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "LinkedList",
                "permalink": "/docs/category/linkedlist"
              },
              "next": {
                "title": "Odd Even Linked List By Index",
                "permalink": "/docs/LinkedList/odd_even"
              }
            },
            {
              "unversionedId": "LinkedList/remove_duplicate_1",
              "id": "LinkedList/remove_duplicate_1",
              "title": "remove_duplicate_1",
              "description": "",
              "source": "@site/docs/LinkedList/remove_duplicate_1.mdx",
              "sourceDirName": "LinkedList",
              "slug": "/LinkedList/remove_duplicate_1",
              "permalink": "/docs/LinkedList/remove_duplicate_1",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/LinkedList/remove_duplicate_1.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "intersection_linked_list",
                "permalink": "/docs/LinkedList/intersection_linked_list"
              },
              "next": {
                "title": "Queue",
                "permalink": "/docs/category/queue"
              }
            },
            {
              "unversionedId": "LinkedList/remove_duplicate_2",
              "id": "LinkedList/remove_duplicate_2",
              "title": "Remove Duplicates from Sorted List II",
              "description": "Level - Medium",
              "source": "@site/docs/LinkedList/remove_duplicate_2.mdx",
              "sourceDirName": "LinkedList",
              "slug": "/LinkedList/remove_duplicate_2",
              "permalink": "/docs/LinkedList/remove_duplicate_2",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/LinkedList/remove_duplicate_2.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 7,
              "frontMatter": {
                "sidebar_position": 7,
                "title": "Remove Duplicates from Sorted List II"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Rotate the Linked List",
                "permalink": "/docs/LinkedList/rotate_list"
              },
              "next": {
                "title": "Copy List with Random Pointer",
                "permalink": "/docs/LinkedList/copy_list_random_pointer"
              }
            },
            {
              "unversionedId": "LinkedList/remove_nth_node_from_end",
              "id": "LinkedList/remove_nth_node_from_end",
              "title": "Remove Nth Node From End of List",
              "description": "Level - Medium",
              "source": "@site/docs/LinkedList/remove_nth_node_from_end.mdx",
              "sourceDirName": "LinkedList",
              "slug": "/LinkedList/remove_nth_node_from_end",
              "permalink": "/docs/LinkedList/remove_nth_node_from_end",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/LinkedList/remove_nth_node_from_end.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 8,
              "frontMatter": {
                "sidebar_position": 8,
                "title": "Remove Nth Node From End of List"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Copy List with Random Pointer",
                "permalink": "/docs/LinkedList/copy_list_random_pointer"
              },
              "next": {
                "title": "Reverse Linked List 2",
                "permalink": "/docs/LinkedList/Basic/reverse_linked_list"
              }
            },
            {
              "unversionedId": "LinkedList/rotate_list",
              "id": "LinkedList/rotate_list",
              "title": "Rotate the Linked List",
              "description": "Level - Medium",
              "source": "@site/docs/LinkedList/rotate_list.mdx",
              "sourceDirName": "LinkedList",
              "slug": "/LinkedList/rotate_list",
              "permalink": "/docs/LinkedList/rotate_list",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/LinkedList/rotate_list.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 5,
              "frontMatter": {
                "sidebar_position": 5,
                "title": "Rotate the Linked List"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Segregate even and odd nodes in a Link List",
                "permalink": "/docs/LinkedList/segregate_even_odd"
              },
              "next": {
                "title": "Remove Duplicates from Sorted List II",
                "permalink": "/docs/LinkedList/remove_duplicate_2"
              }
            },
            {
              "unversionedId": "LinkedList/segregate_even_odd",
              "id": "LinkedList/segregate_even_odd",
              "title": "Segregate even and odd nodes in a Link List",
              "description": "Level - Medium",
              "source": "@site/docs/LinkedList/segregate_even_odd.mdx",
              "sourceDirName": "LinkedList",
              "slug": "/LinkedList/segregate_even_odd",
              "permalink": "/docs/LinkedList/segregate_even_odd",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/LinkedList/segregate_even_odd.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 4,
              "frontMatter": {
                "sidebar_position": 4,
                "title": "Segregate even and odd nodes in a Link List"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Odd Even Linked List By Index",
                "permalink": "/docs/LinkedList/odd_even"
              },
              "next": {
                "title": "Rotate the Linked List",
                "permalink": "/docs/LinkedList/rotate_list"
              }
            },
            {
              "unversionedId": "Maths/atoi",
              "id": "Maths/atoi",
              "title": "atoi",
              "description": "",
              "source": "@site/docs/Maths/atoi.mdx",
              "sourceDirName": "Maths",
              "slug": "/Maths/atoi",
              "permalink": "/docs/Maths/atoi",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Maths/atoi.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Missing Number",
                "permalink": "/docs/Maths/missing_num"
              },
              "next": {
                "title": "min_moves_for_equal_array",
                "permalink": "/docs/Maths/min_moves_for_equal_array"
              }
            },
            {
              "unversionedId": "Maths/min_moves_for_equal_array",
              "id": "Maths/min_moves_for_equal_array",
              "title": "min_moves_for_equal_array",
              "description": "",
              "source": "@site/docs/Maths/min_moves_for_equal_array.mdx",
              "sourceDirName": "Maths",
              "slug": "/Maths/min_moves_for_equal_array",
              "permalink": "/docs/Maths/min_moves_for_equal_array",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Maths/min_moves_for_equal_array.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "atoi",
                "permalink": "/docs/Maths/atoi"
              },
              "next": {
                "title": "multiply_string",
                "permalink": "/docs/Maths/multiply_string"
              }
            },
            {
              "unversionedId": "Maths/missing_num",
              "id": "Maths/missing_num",
              "title": "Missing Number",
              "description": "Level - Easy",
              "source": "@site/docs/Maths/missing_num.mdx",
              "sourceDirName": "Maths",
              "slug": "/Maths/missing_num",
              "permalink": "/docs/Maths/missing_num",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Maths/missing_num.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 2,
              "frontMatter": {
                "sidebar_position": 2,
                "title": "Missing Number"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Permutation Sequence",
                "permalink": "/docs/Maths/permutation_sequence"
              },
              "next": {
                "title": "atoi",
                "permalink": "/docs/Maths/atoi"
              }
            },
            {
              "unversionedId": "Maths/multiply_string",
              "id": "Maths/multiply_string",
              "title": "multiply_string",
              "description": "",
              "source": "@site/docs/Maths/multiply_string.mdx",
              "sourceDirName": "Maths",
              "slug": "/Maths/multiply_string",
              "permalink": "/docs/Maths/multiply_string",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Maths/multiply_string.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "min_moves_for_equal_array",
                "permalink": "/docs/Maths/min_moves_for_equal_array"
              },
              "next": {
                "title": "plus_one",
                "permalink": "/docs/Maths/plus_one"
              }
            },
            {
              "unversionedId": "Maths/permutation_sequence",
              "id": "Maths/permutation_sequence",
              "title": "Permutation Sequence",
              "description": "Level - Hard",
              "source": "@site/docs/Maths/permutation_sequence.mdx",
              "sourceDirName": "Maths",
              "slug": "/Maths/permutation_sequence",
              "permalink": "/docs/Maths/permutation_sequence",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Maths/permutation_sequence.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1,
                "title": "Permutation Sequence"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Find K Closest Elements",
                "permalink": "/docs/Heap/PriorityQueue/k-closest-points"
              },
              "next": {
                "title": "Missing Number",
                "permalink": "/docs/Maths/missing_num"
              }
            },
            {
              "unversionedId": "Maths/plus_one",
              "id": "Maths/plus_one",
              "title": "plus_one",
              "description": "",
              "source": "@site/docs/Maths/plus_one.mdx",
              "sourceDirName": "Maths",
              "slug": "/Maths/plus_one",
              "permalink": "/docs/Maths/plus_one",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Maths/plus_one.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "multiply_string",
                "permalink": "/docs/Maths/multiply_string"
              },
              "next": {
                "title": "pow_x_n",
                "permalink": "/docs/Maths/pow_x_n"
              }
            },
            {
              "unversionedId": "Maths/pow_x_n",
              "id": "Maths/pow_x_n",
              "title": "pow_x_n",
              "description": "",
              "source": "@site/docs/Maths/pow_x_n.mdx",
              "sourceDirName": "Maths",
              "slug": "/Maths/pow_x_n",
              "permalink": "/docs/Maths/pow_x_n",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Maths/pow_x_n.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "plus_one",
                "permalink": "/docs/Maths/plus_one"
              },
              "next": {
                "title": "combination_sum_1",
                "permalink": "/docs/Recursion/Backtracking/combination_sum_1"
              }
            },
            {
              "unversionedId": "Queue/BFS/introduction",
              "id": "Queue/BFS/introduction",
              "title": "Introduction for BFS(Breath First Search)",
              "description": "What is BFS ?",
              "source": "@site/docs/Queue/BFS/introduction.mdx",
              "sourceDirName": "Queue/BFS",
              "slug": "/Queue/BFS/introduction",
              "permalink": "/docs/Queue/BFS/introduction",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Queue/BFS/introduction.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1,
                "title": "Introduction for BFS(Breath First Search)"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Sliding Window Maximum",
                "permalink": "/docs/Queue/sliding_window_maximum"
              },
              "next": {
                "title": "Number of Islands",
                "permalink": "/docs/Queue/BFS/number_of_island"
              }
            },
            {
              "unversionedId": "Queue/BFS/number_of_island",
              "id": "Queue/BFS/number_of_island",
              "title": "Number of Islands",
              "description": "Level - Medium",
              "source": "@site/docs/Queue/BFS/number_of_island.mdx",
              "sourceDirName": "Queue/BFS",
              "slug": "/Queue/BFS/number_of_island",
              "permalink": "/docs/Queue/BFS/number_of_island",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Queue/BFS/number_of_island.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 2,
              "frontMatter": {
                "sidebar_position": 2,
                "title": "Number of Islands"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Introduction for BFS(Breath First Search)",
                "permalink": "/docs/Queue/BFS/introduction"
              },
              "next": {
                "title": "DynamicProgramming",
                "permalink": "/docs/category/dynamicprogramming"
              }
            },
            {
              "unversionedId": "Queue/sliding_window_maximum",
              "id": "Queue/sliding_window_maximum",
              "title": "Sliding Window Maximum",
              "description": "Level - Hard",
              "source": "@site/docs/Queue/sliding_window_maximum.mdx",
              "sourceDirName": "Queue",
              "slug": "/Queue/sliding_window_maximum",
              "permalink": "/docs/Queue/sliding_window_maximum",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Queue/sliding_window_maximum.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1,
                "title": "Sliding Window Maximum"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Queue",
                "permalink": "/docs/category/queue"
              },
              "next": {
                "title": "Introduction for BFS(Breath First Search)",
                "permalink": "/docs/Queue/BFS/introduction"
              }
            },
            {
              "unversionedId": "Recursion/Backtracking/combination_sum_1",
              "id": "Recursion/Backtracking/combination_sum_1",
              "title": "combination_sum_1",
              "description": "",
              "source": "@site/docs/Recursion/Backtracking/combination_sum_1.mdx",
              "sourceDirName": "Recursion/Backtracking",
              "slug": "/Recursion/Backtracking/combination_sum_1",
              "permalink": "/docs/Recursion/Backtracking/combination_sum_1",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Recursion/Backtracking/combination_sum_1.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "pow_x_n",
                "permalink": "/docs/Maths/pow_x_n"
              },
              "next": {
                "title": "generate_paranthesis",
                "permalink": "/docs/Recursion/Backtracking/generate_paranthesis"
              }
            },
            {
              "unversionedId": "Recursion/Backtracking/generate_paranthesis",
              "id": "Recursion/Backtracking/generate_paranthesis",
              "title": "generate_paranthesis",
              "description": "",
              "source": "@site/docs/Recursion/Backtracking/generate_paranthesis.mdx",
              "sourceDirName": "Recursion/Backtracking",
              "slug": "/Recursion/Backtracking/generate_paranthesis",
              "permalink": "/docs/Recursion/Backtracking/generate_paranthesis",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Recursion/Backtracking/generate_paranthesis.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "combination_sum_1",
                "permalink": "/docs/Recursion/Backtracking/combination_sum_1"
              },
              "next": {
                "title": "partition_k_eqal_sum_subset",
                "permalink": "/docs/Recursion/Backtracking/partition_k_eqal_sum_subset"
              }
            },
            {
              "unversionedId": "Recursion/Backtracking/partition_k_eqal_sum_subset",
              "id": "Recursion/Backtracking/partition_k_eqal_sum_subset",
              "title": "partition_k_eqal_sum_subset",
              "description": "",
              "source": "@site/docs/Recursion/Backtracking/partition_k_eqal_sum_subset.mdx",
              "sourceDirName": "Recursion/Backtracking",
              "slug": "/Recursion/Backtracking/partition_k_eqal_sum_subset",
              "permalink": "/docs/Recursion/Backtracking/partition_k_eqal_sum_subset",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Recursion/Backtracking/partition_k_eqal_sum_subset.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "generate_paranthesis",
                "permalink": "/docs/Recursion/Backtracking/generate_paranthesis"
              },
              "next": {
                "title": "subset_1",
                "permalink": "/docs/Recursion/Backtracking/subset_1"
              }
            },
            {
              "unversionedId": "Recursion/Backtracking/subset_1",
              "id": "Recursion/Backtracking/subset_1",
              "title": "subset_1",
              "description": "",
              "source": "@site/docs/Recursion/Backtracking/subset_1.mdx",
              "sourceDirName": "Recursion/Backtracking",
              "slug": "/Recursion/Backtracking/subset_1",
              "permalink": "/docs/Recursion/Backtracking/subset_1",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Recursion/Backtracking/subset_1.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "partition_k_eqal_sum_subset",
                "permalink": "/docs/Recursion/Backtracking/partition_k_eqal_sum_subset"
              },
              "next": {
                "title": "Longest Increasing Path in a Matrix",
                "permalink": "/docs/Recursion/DFS/longest_increasing_path_matrix"
              }
            },
            {
              "unversionedId": "Recursion/DFS/introduction",
              "id": "Recursion/DFS/introduction",
              "title": "introduction",
              "description": "",
              "source": "@site/docs/Recursion/DFS/introduction.mdx",
              "sourceDirName": "Recursion/DFS",
              "slug": "/Recursion/DFS/introduction",
              "permalink": "/docs/Recursion/DFS/introduction",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Recursion/DFS/introduction.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Making a Large Island",
                "permalink": "/docs/Recursion/DFS/making_large_island"
              },
              "next": {
                "title": "number_of_island",
                "permalink": "/docs/Recursion/DFS/number_of_island"
              }
            },
            {
              "unversionedId": "Recursion/DFS/longest_increasing_path_matrix",
              "id": "Recursion/DFS/longest_increasing_path_matrix",
              "title": "Longest Increasing Path in a Matrix",
              "description": "Level - Hard",
              "source": "@site/docs/Recursion/DFS/longest_increasing_path_matrix.mdx",
              "sourceDirName": "Recursion/DFS",
              "slug": "/Recursion/DFS/longest_increasing_path_matrix",
              "permalink": "/docs/Recursion/DFS/longest_increasing_path_matrix",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Recursion/DFS/longest_increasing_path_matrix.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1,
                "title": "Longest Increasing Path in a Matrix"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "subset_1",
                "permalink": "/docs/Recursion/Backtracking/subset_1"
              },
              "next": {
                "title": "Shortest Bridge",
                "permalink": "/docs/Recursion/DFS/shortest_bridge"
              }
            },
            {
              "unversionedId": "Recursion/DFS/making_large_island",
              "id": "Recursion/DFS/making_large_island",
              "title": "Making a Large Island",
              "description": "Level - Hard",
              "source": "@site/docs/Recursion/DFS/making_large_island.mdx",
              "sourceDirName": "Recursion/DFS",
              "slug": "/Recursion/DFS/making_large_island",
              "permalink": "/docs/Recursion/DFS/making_large_island",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Recursion/DFS/making_large_island.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 5,
              "frontMatter": {
                "sidebar_position": 5,
                "title": "Making a Large Island"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Number of Closed Island",
                "permalink": "/docs/Recursion/DFS/number_of_closed_island"
              },
              "next": {
                "title": "introduction",
                "permalink": "/docs/Recursion/DFS/introduction"
              }
            },
            {
              "unversionedId": "Recursion/DFS/number_of_closed_island",
              "id": "Recursion/DFS/number_of_closed_island",
              "title": "Number of Closed Island",
              "description": "Level - Medium",
              "source": "@site/docs/Recursion/DFS/number_of_closed_island.mdx",
              "sourceDirName": "Recursion/DFS",
              "slug": "/Recursion/DFS/number_of_closed_island",
              "permalink": "/docs/Recursion/DFS/number_of_closed_island",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Recursion/DFS/number_of_closed_island.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 4,
              "frontMatter": {
                "sidebar_position": 4,
                "title": "Number of Closed Island"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Shortest Bridge",
                "permalink": "/docs/Recursion/DFS/shortest_bridge"
              },
              "next": {
                "title": "Making a Large Island",
                "permalink": "/docs/Recursion/DFS/making_large_island"
              }
            },
            {
              "unversionedId": "Recursion/DFS/number_of_island",
              "id": "Recursion/DFS/number_of_island",
              "title": "number_of_island",
              "description": "",
              "source": "@site/docs/Recursion/DFS/number_of_island.mdx",
              "sourceDirName": "Recursion/DFS",
              "slug": "/Recursion/DFS/number_of_island",
              "permalink": "/docs/Recursion/DFS/number_of_island",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Recursion/DFS/number_of_island.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "introduction",
                "permalink": "/docs/Recursion/DFS/introduction"
              },
              "next": {
                "title": "word_search",
                "permalink": "/docs/Recursion/DFS/word_search"
              }
            },
            {
              "unversionedId": "Recursion/DFS/shortest_bridge",
              "id": "Recursion/DFS/shortest_bridge",
              "title": "Shortest Bridge",
              "description": "Level - Medium",
              "source": "@site/docs/Recursion/DFS/shortest_bridge.mdx",
              "sourceDirName": "Recursion/DFS",
              "slug": "/Recursion/DFS/shortest_bridge",
              "permalink": "/docs/Recursion/DFS/shortest_bridge",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Recursion/DFS/shortest_bridge.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 2,
              "frontMatter": {
                "sidebar_position": 2,
                "title": "Shortest Bridge"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Longest Increasing Path in a Matrix",
                "permalink": "/docs/Recursion/DFS/longest_increasing_path_matrix"
              },
              "next": {
                "title": "Number of Closed Island",
                "permalink": "/docs/Recursion/DFS/number_of_closed_island"
              }
            },
            {
              "unversionedId": "Recursion/DFS/word_search",
              "id": "Recursion/DFS/word_search",
              "title": "word_search",
              "description": "",
              "source": "@site/docs/Recursion/DFS/word_search.mdx",
              "sourceDirName": "Recursion/DFS",
              "slug": "/Recursion/DFS/word_search",
              "permalink": "/docs/Recursion/DFS/word_search",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Recursion/DFS/word_search.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "number_of_island",
                "permalink": "/docs/Recursion/DFS/number_of_island"
              },
              "next": {
                "title": "word_search_2",
                "permalink": "/docs/Recursion/DFS/word_search_2"
              }
            },
            {
              "unversionedId": "Recursion/DFS/word_search_2",
              "id": "Recursion/DFS/word_search_2",
              "title": "word_search_2",
              "description": "",
              "source": "@site/docs/Recursion/DFS/word_search_2.mdx",
              "sourceDirName": "Recursion/DFS",
              "slug": "/Recursion/DFS/word_search_2",
              "permalink": "/docs/Recursion/DFS/word_search_2",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Recursion/DFS/word_search_2.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "word_search",
                "permalink": "/docs/Recursion/DFS/word_search"
              },
              "next": {
                "title": "Introduction of Binary Search",
                "permalink": "/docs/Searching/BinarySearch/introduction"
              }
            },
            {
              "unversionedId": "Searching/BinarySearch/capacity_to_ship_package_within_ddays",
              "id": "Searching/BinarySearch/capacity_to_ship_package_within_ddays",
              "title": "Capacity To Ship Packages Within D Days",
              "description": "Level - Medium",
              "source": "@site/docs/Searching/BinarySearch/capacity_to_ship_package_within_ddays.mdx",
              "sourceDirName": "Searching/BinarySearch",
              "slug": "/Searching/BinarySearch/capacity_to_ship_package_within_ddays",
              "permalink": "/docs/Searching/BinarySearch/capacity_to_ship_package_within_ddays",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Searching/BinarySearch/capacity_to_ship_package_within_ddays.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 2,
              "frontMatter": {
                "sidebar_position": 2,
                "title": "Capacity To Ship Packages Within D Days"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Introduction of Binary Search",
                "permalink": "/docs/Searching/BinarySearch/introduction"
              },
              "next": {
                "title": "Minimum Limit of Balls In Bag",
                "permalink": "/docs/Searching/BinarySearch/minimum_limit_of_balls_in_bag"
              }
            },
            {
              "unversionedId": "Searching/BinarySearch/find_peak",
              "id": "Searching/BinarySearch/find_peak",
              "title": "find_peak",
              "description": "",
              "source": "@site/docs/Searching/BinarySearch/find_peak.mdx",
              "sourceDirName": "Searching/BinarySearch",
              "slug": "/Searching/BinarySearch/find_peak",
              "permalink": "/docs/Searching/BinarySearch/find_peak",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Searching/BinarySearch/find_peak.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Median of Two Sorted Arrays",
                "permalink": "/docs/Searching/BinarySearch/median_2_sorted_arrays"
              },
              "next": {
                "title": "first_last_pos",
                "permalink": "/docs/Searching/BinarySearch/first_last_pos"
              }
            },
            {
              "unversionedId": "Searching/BinarySearch/first_last_pos",
              "id": "Searching/BinarySearch/first_last_pos",
              "title": "first_last_pos",
              "description": "",
              "source": "@site/docs/Searching/BinarySearch/first_last_pos.mdx",
              "sourceDirName": "Searching/BinarySearch",
              "slug": "/Searching/BinarySearch/first_last_pos",
              "permalink": "/docs/Searching/BinarySearch/first_last_pos",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Searching/BinarySearch/first_last_pos.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "find_peak",
                "permalink": "/docs/Searching/BinarySearch/find_peak"
              },
              "next": {
                "title": "min_in_roated_sorted_array",
                "permalink": "/docs/Searching/BinarySearch/min_in_roated_sorted_array"
              }
            },
            {
              "unversionedId": "Searching/BinarySearch/introduction",
              "id": "Searching/BinarySearch/introduction",
              "title": "Introduction of Binary Search",
              "description": "Definition",
              "source": "@site/docs/Searching/BinarySearch/introduction.mdx",
              "sourceDirName": "Searching/BinarySearch",
              "slug": "/Searching/BinarySearch/introduction",
              "permalink": "/docs/Searching/BinarySearch/introduction",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Searching/BinarySearch/introduction.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1,
                "title": "Introduction of Binary Search"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "word_search_2",
                "permalink": "/docs/Recursion/DFS/word_search_2"
              },
              "next": {
                "title": "Capacity To Ship Packages Within D Days",
                "permalink": "/docs/Searching/BinarySearch/capacity_to_ship_package_within_ddays"
              }
            },
            {
              "unversionedId": "Searching/BinarySearch/median_2_sorted_arrays",
              "id": "Searching/BinarySearch/median_2_sorted_arrays",
              "title": "Median of Two Sorted Arrays",
              "description": "Level - Hard",
              "source": "@site/docs/Searching/BinarySearch/median_2_sorted_arrays.mdx",
              "sourceDirName": "Searching/BinarySearch",
              "slug": "/Searching/BinarySearch/median_2_sorted_arrays",
              "permalink": "/docs/Searching/BinarySearch/median_2_sorted_arrays",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Searching/BinarySearch/median_2_sorted_arrays.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 5,
              "frontMatter": {
                "sidebar_position": 5,
                "title": "Median of Two Sorted Arrays"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Search in Rotated Sorted Array",
                "permalink": "/docs/Searching/BinarySearch/search_in_rotated"
              },
              "next": {
                "title": "find_peak",
                "permalink": "/docs/Searching/BinarySearch/find_peak"
              }
            },
            {
              "unversionedId": "Searching/BinarySearch/min_in_roated_sorted_array",
              "id": "Searching/BinarySearch/min_in_roated_sorted_array",
              "title": "min_in_roated_sorted_array",
              "description": "",
              "source": "@site/docs/Searching/BinarySearch/min_in_roated_sorted_array.mdx",
              "sourceDirName": "Searching/BinarySearch",
              "slug": "/Searching/BinarySearch/min_in_roated_sorted_array",
              "permalink": "/docs/Searching/BinarySearch/min_in_roated_sorted_array",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Searching/BinarySearch/min_in_roated_sorted_array.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "first_last_pos",
                "permalink": "/docs/Searching/BinarySearch/first_last_pos"
              },
              "next": {
                "title": "min_roated_sorted_array_with_duplicates",
                "permalink": "/docs/Searching/BinarySearch/min_roated_sorted_array_with_duplicates"
              }
            },
            {
              "unversionedId": "Searching/BinarySearch/min_roated_sorted_array_with_duplicates",
              "id": "Searching/BinarySearch/min_roated_sorted_array_with_duplicates",
              "title": "min_roated_sorted_array_with_duplicates",
              "description": "",
              "source": "@site/docs/Searching/BinarySearch/min_roated_sorted_array_with_duplicates.mdx",
              "sourceDirName": "Searching/BinarySearch",
              "slug": "/Searching/BinarySearch/min_roated_sorted_array_with_duplicates",
              "permalink": "/docs/Searching/BinarySearch/min_roated_sorted_array_with_duplicates",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Searching/BinarySearch/min_roated_sorted_array_with_duplicates.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "min_in_roated_sorted_array",
                "permalink": "/docs/Searching/BinarySearch/min_in_roated_sorted_array"
              },
              "next": {
                "title": "longest-repeating-character-replacement",
                "permalink": "/docs/SlidingWindow/longest-repeating-character-replacement"
              }
            },
            {
              "unversionedId": "Searching/BinarySearch/minimum_limit_of_balls_in_bag",
              "id": "Searching/BinarySearch/minimum_limit_of_balls_in_bag",
              "title": "Minimum Limit of Balls In Bag",
              "description": "Level - Medium",
              "source": "@site/docs/Searching/BinarySearch/minimum_limit_of_balls_in_bag.mdx",
              "sourceDirName": "Searching/BinarySearch",
              "slug": "/Searching/BinarySearch/minimum_limit_of_balls_in_bag",
              "permalink": "/docs/Searching/BinarySearch/minimum_limit_of_balls_in_bag",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Searching/BinarySearch/minimum_limit_of_balls_in_bag.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 3,
              "frontMatter": {
                "sidebar_position": 3,
                "title": "Minimum Limit of Balls In Bag"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Capacity To Ship Packages Within D Days",
                "permalink": "/docs/Searching/BinarySearch/capacity_to_ship_package_within_ddays"
              },
              "next": {
                "title": "Search in Rotated Sorted Array",
                "permalink": "/docs/Searching/BinarySearch/search_in_rotated"
              }
            },
            {
              "unversionedId": "Searching/BinarySearch/search_in_rotated",
              "id": "Searching/BinarySearch/search_in_rotated",
              "title": "Search in Rotated Sorted Array",
              "description": "Level - Medium",
              "source": "@site/docs/Searching/BinarySearch/search_in_rotated.mdx",
              "sourceDirName": "Searching/BinarySearch",
              "slug": "/Searching/BinarySearch/search_in_rotated",
              "permalink": "/docs/Searching/BinarySearch/search_in_rotated",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Searching/BinarySearch/search_in_rotated.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 4,
              "frontMatter": {
                "sidebar_position": 4,
                "title": "Search in Rotated Sorted Array"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Minimum Limit of Balls In Bag",
                "permalink": "/docs/Searching/BinarySearch/minimum_limit_of_balls_in_bag"
              },
              "next": {
                "title": "Median of Two Sorted Arrays",
                "permalink": "/docs/Searching/BinarySearch/median_2_sorted_arrays"
              }
            },
            {
              "unversionedId": "SegmentTrees/intro",
              "id": "SegmentTrees/intro",
              "title": "Segment Trees",
              "description": "Definition",
              "source": "@site/docs/SegmentTrees/intro.mdx",
              "sourceDirName": "SegmentTrees",
              "slug": "/SegmentTrees/intro",
              "permalink": "/docs/SegmentTrees/intro",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/SegmentTrees/intro.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Segment Trees",
                "permalink": "/docs/category/segment-trees"
              },
              "next": {
                "title": "power_of_2",
                "permalink": "/docs/BitManipulation/power_of_2"
              }
            },
            {
              "unversionedId": "SlidingWindow/longest_substring_without_repeat",
              "id": "SlidingWindow/longest_substring_without_repeat",
              "title": "longest_substring_without_repeat",
              "description": "",
              "source": "@site/docs/SlidingWindow/longest_substring_without_repeat.mdx",
              "sourceDirName": "SlidingWindow",
              "slug": "/SlidingWindow/longest_substring_without_repeat",
              "permalink": "/docs/SlidingWindow/longest_substring_without_repeat",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/SlidingWindow/longest_substring_without_repeat.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "longest-substring-with-at-least-k-repeating-characters",
                "permalink": "/docs/SlidingWindow/longest-substring-with-at-least-k-repeating-characters"
              },
              "next": {
                "title": "min_window_substring",
                "permalink": "/docs/SlidingWindow/min_window_substring"
              }
            },
            {
              "unversionedId": "SlidingWindow/longest-repeating-character-replacement",
              "id": "SlidingWindow/longest-repeating-character-replacement",
              "title": "longest-repeating-character-replacement",
              "description": "",
              "source": "@site/docs/SlidingWindow/longest-repeating-character-replacement.mdx",
              "sourceDirName": "SlidingWindow",
              "slug": "/SlidingWindow/longest-repeating-character-replacement",
              "permalink": "/docs/SlidingWindow/longest-repeating-character-replacement",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/SlidingWindow/longest-repeating-character-replacement.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "min_roated_sorted_array_with_duplicates",
                "permalink": "/docs/Searching/BinarySearch/min_roated_sorted_array_with_duplicates"
              },
              "next": {
                "title": "longest-substring-with-at-least-k-repeating-characters",
                "permalink": "/docs/SlidingWindow/longest-substring-with-at-least-k-repeating-characters"
              }
            },
            {
              "unversionedId": "SlidingWindow/longest-substring-with-at-least-k-repeating-characters",
              "id": "SlidingWindow/longest-substring-with-at-least-k-repeating-characters",
              "title": "longest-substring-with-at-least-k-repeating-characters",
              "description": "",
              "source": "@site/docs/SlidingWindow/longest-substring-with-at-least-k-repeating-characters.mdx",
              "sourceDirName": "SlidingWindow",
              "slug": "/SlidingWindow/longest-substring-with-at-least-k-repeating-characters",
              "permalink": "/docs/SlidingWindow/longest-substring-with-at-least-k-repeating-characters",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/SlidingWindow/longest-substring-with-at-least-k-repeating-characters.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "longest-repeating-character-replacement",
                "permalink": "/docs/SlidingWindow/longest-repeating-character-replacement"
              },
              "next": {
                "title": "longest_substring_without_repeat",
                "permalink": "/docs/SlidingWindow/longest_substring_without_repeat"
              }
            },
            {
              "unversionedId": "SlidingWindow/min_window_substring",
              "id": "SlidingWindow/min_window_substring",
              "title": "min_window_substring",
              "description": "",
              "source": "@site/docs/SlidingWindow/min_window_substring.mdx",
              "sourceDirName": "SlidingWindow",
              "slug": "/SlidingWindow/min_window_substring",
              "permalink": "/docs/SlidingWindow/min_window_substring",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/SlidingWindow/min_window_substring.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "longest_substring_without_repeat",
                "permalink": "/docs/SlidingWindow/longest_substring_without_repeat"
              },
              "next": {
                "title": "Introduction of Merge Sort",
                "permalink": "/docs/Sorting/MergeSort/introduction"
              }
            },
            {
              "unversionedId": "Sorting/MergeSort/introduction",
              "id": "Sorting/MergeSort/introduction",
              "title": "Introduction of Merge Sort",
              "description": "Definition",
              "source": "@site/docs/Sorting/MergeSort/introduction.mdx",
              "sourceDirName": "Sorting/MergeSort",
              "slug": "/Sorting/MergeSort/introduction",
              "permalink": "/docs/Sorting/MergeSort/introduction",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Sorting/MergeSort/introduction.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1,
                "title": "Introduction of Merge Sort"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "min_window_substring",
                "permalink": "/docs/SlidingWindow/min_window_substring"
              },
              "next": {
                "title": "reverse_pairs",
                "permalink": "/docs/Sorting/MergeSort/reverse_pairs"
              }
            },
            {
              "unversionedId": "Sorting/MergeSort/reverse_pairs",
              "id": "Sorting/MergeSort/reverse_pairs",
              "title": "reverse_pairs",
              "description": "",
              "source": "@site/docs/Sorting/MergeSort/reverse_pairs.mdx",
              "sourceDirName": "Sorting/MergeSort",
              "slug": "/Sorting/MergeSort/reverse_pairs",
              "permalink": "/docs/Sorting/MergeSort/reverse_pairs",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Sorting/MergeSort/reverse_pairs.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Introduction of Merge Sort",
                "permalink": "/docs/Sorting/MergeSort/introduction"
              },
              "next": {
                "title": "Minimum Remove to Make Valid Parentheses",
                "permalink": "/docs/Strings/minimum-remove-to-make-valid-parentheses"
              }
            },
            {
              "unversionedId": "Stack/MonotonicStack/introduction",
              "id": "Stack/MonotonicStack/introduction",
              "title": "introduction",
              "description": "whenever we need the max/min element and side by side have to maintain the order then monotonic stack is the best way to achive the goal.",
              "source": "@site/docs/Stack/MonotonicStack/introduction.mdx",
              "sourceDirName": "Stack/MonotonicStack",
              "slug": "/Stack/MonotonicStack/introduction",
              "permalink": "/docs/Stack/MonotonicStack/introduction",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Stack/MonotonicStack/introduction.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Next Greater Element",
                "permalink": "/docs/Stack/MonotonicStack/next_greater_element"
              },
              "next": {
                "title": "largest_rectange_histogram",
                "permalink": "/docs/Stack/MonotonicStack/largest_rectange_histogram"
              }
            },
            {
              "unversionedId": "Stack/MonotonicStack/largest_rectange_histogram",
              "id": "Stack/MonotonicStack/largest_rectange_histogram",
              "title": "largest_rectange_histogram",
              "description": "",
              "source": "@site/docs/Stack/MonotonicStack/largest_rectange_histogram.mdx",
              "sourceDirName": "Stack/MonotonicStack",
              "slug": "/Stack/MonotonicStack/largest_rectange_histogram",
              "permalink": "/docs/Stack/MonotonicStack/largest_rectange_histogram",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Stack/MonotonicStack/largest_rectange_histogram.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "introduction",
                "permalink": "/docs/Stack/MonotonicStack/introduction"
              },
              "next": {
                "title": "maximum_binary_tree",
                "permalink": "/docs/Stack/MonotonicStack/maximum_binary_tree"
              }
            },
            {
              "unversionedId": "Stack/MonotonicStack/maximum_binary_tree",
              "id": "Stack/MonotonicStack/maximum_binary_tree",
              "title": "maximum_binary_tree",
              "description": "",
              "source": "@site/docs/Stack/MonotonicStack/maximum_binary_tree.mdx",
              "sourceDirName": "Stack/MonotonicStack",
              "slug": "/Stack/MonotonicStack/maximum_binary_tree",
              "permalink": "/docs/Stack/MonotonicStack/maximum_binary_tree",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Stack/MonotonicStack/maximum_binary_tree.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "largest_rectange_histogram",
                "permalink": "/docs/Stack/MonotonicStack/largest_rectange_histogram"
              },
              "next": {
                "title": "most_competitive_subsequence",
                "permalink": "/docs/Stack/MonotonicStack/most_competitive_subsequence"
              }
            },
            {
              "unversionedId": "Stack/MonotonicStack/most_competitive_subsequence",
              "id": "Stack/MonotonicStack/most_competitive_subsequence",
              "title": "most_competitive_subsequence",
              "description": "",
              "source": "@site/docs/Stack/MonotonicStack/most_competitive_subsequence.mdx",
              "sourceDirName": "Stack/MonotonicStack",
              "slug": "/Stack/MonotonicStack/most_competitive_subsequence",
              "permalink": "/docs/Stack/MonotonicStack/most_competitive_subsequence",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Stack/MonotonicStack/most_competitive_subsequence.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "maximum_binary_tree",
                "permalink": "/docs/Stack/MonotonicStack/maximum_binary_tree"
              },
              "next": {
                "title": "remove_k_digits",
                "permalink": "/docs/Stack/MonotonicStack/remove_k_digits"
              }
            },
            {
              "unversionedId": "Stack/MonotonicStack/next_greater_element",
              "id": "Stack/MonotonicStack/next_greater_element",
              "title": "Next Greater Element",
              "description": "Level - Medium",
              "source": "@site/docs/Stack/MonotonicStack/next_greater_element.mdx",
              "sourceDirName": "Stack/MonotonicStack",
              "slug": "/Stack/MonotonicStack/next_greater_element",
              "permalink": "/docs/Stack/MonotonicStack/next_greater_element",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Stack/MonotonicStack/next_greater_element.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1,
                "title": "Next Greater Element"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Sum of Subarray Minimums",
                "permalink": "/docs/Stack/sum-of-subarray-minimums"
              },
              "next": {
                "title": "introduction",
                "permalink": "/docs/Stack/MonotonicStack/introduction"
              }
            },
            {
              "unversionedId": "Stack/MonotonicStack/remove_k_digits",
              "id": "Stack/MonotonicStack/remove_k_digits",
              "title": "remove_k_digits",
              "description": "hence we need to make sure that that output should be nearly sorted in strictly increasing manner then only its possibly mini",
              "source": "@site/docs/Stack/MonotonicStack/remove_k_digits.mdx",
              "sourceDirName": "Stack/MonotonicStack",
              "slug": "/Stack/MonotonicStack/remove_k_digits",
              "permalink": "/docs/Stack/MonotonicStack/remove_k_digits",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Stack/MonotonicStack/remove_k_digits.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "most_competitive_subsequence",
                "permalink": "/docs/Stack/MonotonicStack/most_competitive_subsequence"
              },
              "next": {
                "title": "reverse_polish_notation",
                "permalink": "/docs/Stack/reverse_polish_notation"
              }
            },
            {
              "unversionedId": "Stack/reverse_polish_notation",
              "id": "Stack/reverse_polish_notation",
              "title": "reverse_polish_notation",
              "description": "",
              "source": "@site/docs/Stack/reverse_polish_notation.mdx",
              "sourceDirName": "Stack",
              "slug": "/Stack/reverse_polish_notation",
              "permalink": "/docs/Stack/reverse_polish_notation",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Stack/reverse_polish_notation.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "remove_k_digits",
                "permalink": "/docs/Stack/MonotonicStack/remove_k_digits"
              },
              "next": {
                "title": "Arrays",
                "permalink": "/docs/category/arrays"
              }
            },
            {
              "unversionedId": "Stack/sum-of-subarray-minimums",
              "id": "Stack/sum-of-subarray-minimums",
              "title": "Sum of Subarray Minimums",
              "description": "Level - Medium",
              "source": "@site/docs/Stack/sum-of-subarray-minimums.mdx",
              "sourceDirName": "Stack",
              "slug": "/Stack/sum-of-subarray-minimums",
              "permalink": "/docs/Stack/sum-of-subarray-minimums",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Stack/sum-of-subarray-minimums.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 2,
              "frontMatter": {
                "sidebar_position": 2,
                "title": "Sum of Subarray Minimums"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Stack",
                "permalink": "/docs/category/stack"
              },
              "next": {
                "title": "Next Greater Element",
                "permalink": "/docs/Stack/MonotonicStack/next_greater_element"
              }
            },
            {
              "unversionedId": "Strings/all_anagrams",
              "id": "Strings/all_anagrams",
              "title": "all_anagrams",
              "description": "",
              "source": "@site/docs/Strings/all_anagrams.mdx",
              "sourceDirName": "Strings",
              "slug": "/Strings/all_anagrams",
              "permalink": "/docs/Strings/all_anagrams",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Strings/all_anagrams.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "restore_ip",
                "permalink": "/docs/Strings/Recursive/restore_ip"
              },
              "next": {
                "title": "count_say",
                "permalink": "/docs/Strings/count_say"
              }
            },
            {
              "unversionedId": "Strings/count_say",
              "id": "Strings/count_say",
              "title": "count_say",
              "description": "",
              "source": "@site/docs/Strings/count_say.mdx",
              "sourceDirName": "Strings",
              "slug": "/Strings/count_say",
              "permalink": "/docs/Strings/count_say",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Strings/count_say.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "all_anagrams",
                "permalink": "/docs/Strings/all_anagrams"
              },
              "next": {
                "title": "group_anagrams",
                "permalink": "/docs/Strings/group_anagrams"
              }
            },
            {
              "unversionedId": "Strings/group_anagrams",
              "id": "Strings/group_anagrams",
              "title": "group_anagrams",
              "description": "",
              "source": "@site/docs/Strings/group_anagrams.mdx",
              "sourceDirName": "Strings",
              "slug": "/Strings/group_anagrams",
              "permalink": "/docs/Strings/group_anagrams",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Strings/group_anagrams.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "count_say",
                "permalink": "/docs/Strings/count_say"
              },
              "next": {
                "title": "substring_search",
                "permalink": "/docs/Strings/substring_search"
              }
            },
            {
              "unversionedId": "Strings/minimum-remove-to-make-valid-parentheses",
              "id": "Strings/minimum-remove-to-make-valid-parentheses",
              "title": "Minimum Remove to Make Valid Parentheses",
              "description": "Level - Medium",
              "source": "@site/docs/Strings/minimum-remove-to-make-valid-parentheses.mdx",
              "sourceDirName": "Strings",
              "slug": "/Strings/minimum-remove-to-make-valid-parentheses",
              "permalink": "/docs/Strings/minimum-remove-to-make-valid-parentheses",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Strings/minimum-remove-to-make-valid-parentheses.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1,
                "title": "Minimum Remove to Make Valid Parentheses"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "reverse_pairs",
                "permalink": "/docs/Sorting/MergeSort/reverse_pairs"
              },
              "next": {
                "title": "Number of Palindromic Substrings",
                "permalink": "/docs/Strings/number_of_palindromic_substrings"
              }
            },
            {
              "unversionedId": "Strings/number_of_palindromic_substrings",
              "id": "Strings/number_of_palindromic_substrings",
              "title": "Number of Palindromic Substrings",
              "description": "Level - Medium",
              "source": "@site/docs/Strings/number_of_palindromic_substrings.mdx",
              "sourceDirName": "Strings",
              "slug": "/Strings/number_of_palindromic_substrings",
              "permalink": "/docs/Strings/number_of_palindromic_substrings",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Strings/number_of_palindromic_substrings.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 2,
              "frontMatter": {
                "sidebar_position": 2,
                "title": "Number of Palindromic Substrings"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Minimum Remove to Make Valid Parentheses",
                "permalink": "/docs/Strings/minimum-remove-to-make-valid-parentheses"
              },
              "next": {
                "title": "Reorganize String",
                "permalink": "/docs/Strings/reorganize_strings"
              }
            },
            {
              "unversionedId": "Strings/Recursive/palindrome_partitioning",
              "id": "Strings/Recursive/palindrome_partitioning",
              "title": "palindrome_partitioning",
              "description": "",
              "source": "@site/docs/Strings/Recursive/palindrome_partitioning.mdx",
              "sourceDirName": "Strings/Recursive",
              "slug": "/Strings/Recursive/palindrome_partitioning",
              "permalink": "/docs/Strings/Recursive/palindrome_partitioning",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Strings/Recursive/palindrome_partitioning.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Reorganize String",
                "permalink": "/docs/Strings/reorganize_strings"
              },
              "next": {
                "title": "restore_ip",
                "permalink": "/docs/Strings/Recursive/restore_ip"
              }
            },
            {
              "unversionedId": "Strings/Recursive/restore_ip",
              "id": "Strings/Recursive/restore_ip",
              "title": "restore_ip",
              "description": "",
              "source": "@site/docs/Strings/Recursive/restore_ip.mdx",
              "sourceDirName": "Strings/Recursive",
              "slug": "/Strings/Recursive/restore_ip",
              "permalink": "/docs/Strings/Recursive/restore_ip",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Strings/Recursive/restore_ip.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "palindrome_partitioning",
                "permalink": "/docs/Strings/Recursive/palindrome_partitioning"
              },
              "next": {
                "title": "all_anagrams",
                "permalink": "/docs/Strings/all_anagrams"
              }
            },
            {
              "unversionedId": "Strings/reorganize_strings",
              "id": "Strings/reorganize_strings",
              "title": "Reorganize String",
              "description": "Level - Medium",
              "source": "@site/docs/Strings/reorganize_strings.mdx",
              "sourceDirName": "Strings",
              "slug": "/Strings/reorganize_strings",
              "permalink": "/docs/Strings/reorganize_strings",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Strings/reorganize_strings.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 2,
              "frontMatter": {
                "sidebar_position": 2,
                "title": "Reorganize String"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Number of Palindromic Substrings",
                "permalink": "/docs/Strings/number_of_palindromic_substrings"
              },
              "next": {
                "title": "palindrome_partitioning",
                "permalink": "/docs/Strings/Recursive/palindrome_partitioning"
              }
            },
            {
              "unversionedId": "Strings/substring_search",
              "id": "Strings/substring_search",
              "title": "substring_search",
              "description": "",
              "source": "@site/docs/Strings/substring_search.mdx",
              "sourceDirName": "Strings",
              "slug": "/Strings/substring_search",
              "permalink": "/docs/Strings/substring_search",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Strings/substring_search.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "group_anagrams",
                "permalink": "/docs/Strings/group_anagrams"
              },
              "next": {
                "title": "Create a Balanced Binary Search Tree with sorted Array",
                "permalink": "/docs/Tree/BinarySearchTree/create_bst_with_sorted_array"
              }
            },
            {
              "unversionedId": "Tree/BinarySearchTree/balance_binary_search_tree",
              "id": "Tree/BinarySearchTree/balance_binary_search_tree",
              "title": "Balance a Binary Search Tree",
              "description": "Level - Medium",
              "source": "@site/docs/Tree/BinarySearchTree/balance_binary_search_tree.mdx",
              "sourceDirName": "Tree/BinarySearchTree",
              "slug": "/Tree/BinarySearchTree/balance_binary_search_tree",
              "permalink": "/docs/Tree/BinarySearchTree/balance_binary_search_tree",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Tree/BinarySearchTree/balance_binary_search_tree.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 2,
              "frontMatter": {
                "sidebar_position": 2,
                "title": "Balance a Binary Search Tree"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Create a Balanced Binary Search Tree with sorted Array",
                "permalink": "/docs/Tree/BinarySearchTree/create_bst_with_sorted_array"
              },
              "next": {
                "title": "Kth Smallest Element in a BST",
                "permalink": "/docs/Tree/BinarySearchTree/kth_smallest_elemnt_bst"
              }
            },
            {
              "unversionedId": "Tree/BinarySearchTree/bst_iterator",
              "id": "Tree/BinarySearchTree/bst_iterator",
              "title": "Binary Search Tree Iterator",
              "description": "Level - Medium",
              "source": "@site/docs/Tree/BinarySearchTree/bst_iterator.mdx",
              "sourceDirName": "Tree/BinarySearchTree",
              "slug": "/Tree/BinarySearchTree/bst_iterator",
              "permalink": "/docs/Tree/BinarySearchTree/bst_iterator",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Tree/BinarySearchTree/bst_iterator.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 5,
              "frontMatter": {
                "sidebar_position": 5,
                "title": "Binary Search Tree Iterator"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Recover Binary Search Tree",
                "permalink": "/docs/Tree/BinarySearchTree/recover_bst"
              },
              "next": {
                "title": "delete_node_bst",
                "permalink": "/docs/Tree/BinarySearchTree/delete_node_bst"
              }
            },
            {
              "unversionedId": "Tree/BinarySearchTree/create_bst_with_sorted_array",
              "id": "Tree/BinarySearchTree/create_bst_with_sorted_array",
              "title": "Create a Balanced Binary Search Tree with sorted Array",
              "description": "Level - Easy",
              "source": "@site/docs/Tree/BinarySearchTree/create_bst_with_sorted_array.mdx",
              "sourceDirName": "Tree/BinarySearchTree",
              "slug": "/Tree/BinarySearchTree/create_bst_with_sorted_array",
              "permalink": "/docs/Tree/BinarySearchTree/create_bst_with_sorted_array",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Tree/BinarySearchTree/create_bst_with_sorted_array.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1,
                "title": "Create a Balanced Binary Search Tree with sorted Array"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "substring_search",
                "permalink": "/docs/Strings/substring_search"
              },
              "next": {
                "title": "Balance a Binary Search Tree",
                "permalink": "/docs/Tree/BinarySearchTree/balance_binary_search_tree"
              }
            },
            {
              "unversionedId": "Tree/BinarySearchTree/delete_node_bst",
              "id": "Tree/BinarySearchTree/delete_node_bst",
              "title": "delete_node_bst",
              "description": "",
              "source": "@site/docs/Tree/BinarySearchTree/delete_node_bst.mdx",
              "sourceDirName": "Tree/BinarySearchTree",
              "slug": "/Tree/BinarySearchTree/delete_node_bst",
              "permalink": "/docs/Tree/BinarySearchTree/delete_node_bst",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Tree/BinarySearchTree/delete_node_bst.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Binary Search Tree Iterator",
                "permalink": "/docs/Tree/BinarySearchTree/bst_iterator"
              },
              "next": {
                "title": "is_valid_bst",
                "permalink": "/docs/Tree/BinarySearchTree/is_valid_bst"
              }
            },
            {
              "unversionedId": "Tree/BinarySearchTree/is_valid_bst",
              "id": "Tree/BinarySearchTree/is_valid_bst",
              "title": "is_valid_bst",
              "description": "",
              "source": "@site/docs/Tree/BinarySearchTree/is_valid_bst.mdx",
              "sourceDirName": "Tree/BinarySearchTree",
              "slug": "/Tree/BinarySearchTree/is_valid_bst",
              "permalink": "/docs/Tree/BinarySearchTree/is_valid_bst",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Tree/BinarySearchTree/is_valid_bst.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "delete_node_bst",
                "permalink": "/docs/Tree/BinarySearchTree/delete_node_bst"
              },
              "next": {
                "title": "range_sum_bst",
                "permalink": "/docs/Tree/BinarySearchTree/range_sum_bst"
              }
            },
            {
              "unversionedId": "Tree/BinarySearchTree/kth_smallest_elemnt_bst",
              "id": "Tree/BinarySearchTree/kth_smallest_elemnt_bst",
              "title": "Kth Smallest Element in a BST",
              "description": "Level - Medium",
              "source": "@site/docs/Tree/BinarySearchTree/kth_smallest_elemnt_bst.mdx",
              "sourceDirName": "Tree/BinarySearchTree",
              "slug": "/Tree/BinarySearchTree/kth_smallest_elemnt_bst",
              "permalink": "/docs/Tree/BinarySearchTree/kth_smallest_elemnt_bst",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Tree/BinarySearchTree/kth_smallest_elemnt_bst.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 3,
              "frontMatter": {
                "sidebar_position": 3,
                "title": "Kth Smallest Element in a BST"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Balance a Binary Search Tree",
                "permalink": "/docs/Tree/BinarySearchTree/balance_binary_search_tree"
              },
              "next": {
                "title": "Recover Binary Search Tree",
                "permalink": "/docs/Tree/BinarySearchTree/recover_bst"
              }
            },
            {
              "unversionedId": "Tree/BinarySearchTree/range_sum_bst",
              "id": "Tree/BinarySearchTree/range_sum_bst",
              "title": "range_sum_bst",
              "description": "",
              "source": "@site/docs/Tree/BinarySearchTree/range_sum_bst.mdx",
              "sourceDirName": "Tree/BinarySearchTree",
              "slug": "/Tree/BinarySearchTree/range_sum_bst",
              "permalink": "/docs/Tree/BinarySearchTree/range_sum_bst",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Tree/BinarySearchTree/range_sum_bst.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "is_valid_bst",
                "permalink": "/docs/Tree/BinarySearchTree/is_valid_bst"
              },
              "next": {
                "title": "unique_bst_2",
                "permalink": "/docs/Tree/BinarySearchTree/unique_bst_2"
              }
            },
            {
              "unversionedId": "Tree/BinarySearchTree/recover_bst",
              "id": "Tree/BinarySearchTree/recover_bst",
              "title": "Recover Binary Search Tree",
              "description": "Level - Medium",
              "source": "@site/docs/Tree/BinarySearchTree/recover_bst.mdx",
              "sourceDirName": "Tree/BinarySearchTree",
              "slug": "/Tree/BinarySearchTree/recover_bst",
              "permalink": "/docs/Tree/BinarySearchTree/recover_bst",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Tree/BinarySearchTree/recover_bst.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 4,
              "frontMatter": {
                "sidebar_position": 4,
                "title": "Recover Binary Search Tree"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Kth Smallest Element in a BST",
                "permalink": "/docs/Tree/BinarySearchTree/kth_smallest_elemnt_bst"
              },
              "next": {
                "title": "Binary Search Tree Iterator",
                "permalink": "/docs/Tree/BinarySearchTree/bst_iterator"
              }
            },
            {
              "unversionedId": "Tree/BinarySearchTree/unique_bst_2",
              "id": "Tree/BinarySearchTree/unique_bst_2",
              "title": "unique_bst_2",
              "description": "",
              "source": "@site/docs/Tree/BinarySearchTree/unique_bst_2.mdx",
              "sourceDirName": "Tree/BinarySearchTree",
              "slug": "/Tree/BinarySearchTree/unique_bst_2",
              "permalink": "/docs/Tree/BinarySearchTree/unique_bst_2",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Tree/BinarySearchTree/unique_bst_2.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "range_sum_bst",
                "permalink": "/docs/Tree/BinarySearchTree/range_sum_bst"
              },
              "next": {
                "title": "Nodes at K Distance",
                "permalink": "/docs/Tree/BinaryTree/AncestorPath/nodes_at_k_dis"
              }
            },
            {
              "unversionedId": "Tree/BinaryTree/AncestorPath/burn_tree",
              "id": "Tree/BinaryTree/AncestorPath/burn_tree",
              "title": "Burn Tree",
              "description": "Level - Medium",
              "source": "@site/docs/Tree/BinaryTree/AncestorPath/burn_tree.mdx",
              "sourceDirName": "Tree/BinaryTree/AncestorPath",
              "slug": "/Tree/BinaryTree/AncestorPath/burn_tree",
              "permalink": "/docs/Tree/BinaryTree/AncestorPath/burn_tree",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Tree/BinaryTree/AncestorPath/burn_tree.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 15,
              "frontMatter": {
                "sidebar_position": 15,
                "title": "Burn Tree"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Nodes at K Distance",
                "permalink": "/docs/Tree/BinaryTree/AncestorPath/nodes_at_k_dis"
              },
              "next": {
                "title": "Vertical Order Traversal of a Binary Tree",
                "permalink": "/docs/Tree/BinaryTree/BTView/vertical_view_bt"
              }
            },
            {
              "unversionedId": "Tree/BinaryTree/AncestorPath/nodes_at_k_dis",
              "id": "Tree/BinaryTree/AncestorPath/nodes_at_k_dis",
              "title": "Nodes at K Distance",
              "description": "Level - Medium",
              "source": "@site/docs/Tree/BinaryTree/AncestorPath/nodes_at_k_dis.mdx",
              "sourceDirName": "Tree/BinaryTree/AncestorPath",
              "slug": "/Tree/BinaryTree/AncestorPath/nodes_at_k_dis",
              "permalink": "/docs/Tree/BinaryTree/AncestorPath/nodes_at_k_dis",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Tree/BinaryTree/AncestorPath/nodes_at_k_dis.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 9,
              "frontMatter": {
                "sidebar_position": 9,
                "title": "Nodes at K Distance"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "unique_bst_2",
                "permalink": "/docs/Tree/BinarySearchTree/unique_bst_2"
              },
              "next": {
                "title": "Burn Tree",
                "permalink": "/docs/Tree/BinaryTree/AncestorPath/burn_tree"
              }
            },
            {
              "unversionedId": "Tree/BinaryTree/BasicTreeQues/balanced_binary_tree",
              "id": "Tree/BinaryTree/BasicTreeQues/balanced_binary_tree",
              "title": "Balanced Binary Tree",
              "description": "Level - Easy",
              "source": "@site/docs/Tree/BinaryTree/BasicTreeQues/balanced_binary_tree.mdx",
              "sourceDirName": "Tree/BinaryTree/BasicTreeQues",
              "slug": "/Tree/BinaryTree/BasicTreeQues/balanced_binary_tree",
              "permalink": "/docs/Tree/BinaryTree/BasicTreeQues/balanced_binary_tree",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Tree/BinaryTree/BasicTreeQues/balanced_binary_tree.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 2,
              "frontMatter": {
                "sidebar_position": 2,
                "title": "Balanced Binary Tree"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Height of Binary Tree",
                "permalink": "/docs/Tree/BinaryTree/BasicTreeQues/height_of_binary_tree"
              },
              "next": {
                "title": "Binary Tree Paths",
                "permalink": "/docs/Tree/BinaryTree/BasicTreeQues/binary_tree_paths"
              }
            },
            {
              "unversionedId": "Tree/BinaryTree/BasicTreeQues/binary_tree_paths",
              "id": "Tree/BinaryTree/BasicTreeQues/binary_tree_paths",
              "title": "Binary Tree Paths",
              "description": "Level - Easy",
              "source": "@site/docs/Tree/BinaryTree/BasicTreeQues/binary_tree_paths.mdx",
              "sourceDirName": "Tree/BinaryTree/BasicTreeQues",
              "slug": "/Tree/BinaryTree/BasicTreeQues/binary_tree_paths",
              "permalink": "/docs/Tree/BinaryTree/BasicTreeQues/binary_tree_paths",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Tree/BinaryTree/BasicTreeQues/binary_tree_paths.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 2,
              "frontMatter": {
                "sidebar_position": 2,
                "title": "Binary Tree Paths"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Balanced Binary Tree",
                "permalink": "/docs/Tree/BinaryTree/BasicTreeQues/balanced_binary_tree"
              },
              "next": {
                "title": "Count Good Nodes in Binary Tree",
                "permalink": "/docs/Tree/BinaryTree/BasicTreeQues/count_good_node_inbt"
              }
            },
            {
              "unversionedId": "Tree/BinaryTree/BasicTreeQues/count_good_node_inbt",
              "id": "Tree/BinaryTree/BasicTreeQues/count_good_node_inbt",
              "title": "Count Good Nodes in Binary Tree",
              "description": "Level - Medium",
              "source": "@site/docs/Tree/BinaryTree/BasicTreeQues/count_good_node_inbt.mdx",
              "sourceDirName": "Tree/BinaryTree/BasicTreeQues",
              "slug": "/Tree/BinaryTree/BasicTreeQues/count_good_node_inbt",
              "permalink": "/docs/Tree/BinaryTree/BasicTreeQues/count_good_node_inbt",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Tree/BinaryTree/BasicTreeQues/count_good_node_inbt.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 3,
              "frontMatter": {
                "sidebar_position": 3,
                "title": "Count Good Nodes in Binary Tree"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Binary Tree Paths",
                "permalink": "/docs/Tree/BinaryTree/BasicTreeQues/binary_tree_paths"
              },
              "next": {
                "title": "Flatten Binary Tree to Linked List",
                "permalink": "/docs/Tree/BinaryTree/BasicTreeQues/flatten_bt_to_linkedlist"
              }
            },
            {
              "unversionedId": "Tree/BinaryTree/BasicTreeQues/flatten_bt_to_linkedlist",
              "id": "Tree/BinaryTree/BasicTreeQues/flatten_bt_to_linkedlist",
              "title": "Flatten Binary Tree to Linked List",
              "description": "Level - Medium",
              "source": "@site/docs/Tree/BinaryTree/BasicTreeQues/flatten_bt_to_linkedlist.mdx",
              "sourceDirName": "Tree/BinaryTree/BasicTreeQues",
              "slug": "/Tree/BinaryTree/BasicTreeQues/flatten_bt_to_linkedlist",
              "permalink": "/docs/Tree/BinaryTree/BasicTreeQues/flatten_bt_to_linkedlist",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Tree/BinaryTree/BasicTreeQues/flatten_bt_to_linkedlist.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 16,
              "frontMatter": {
                "sidebar_position": 16,
                "title": "Flatten Binary Tree to Linked List"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Count Good Nodes in Binary Tree",
                "permalink": "/docs/Tree/BinaryTree/BasicTreeQues/count_good_node_inbt"
              },
              "next": {
                "title": "invert_binary_tree",
                "permalink": "/docs/Tree/BinaryTree/BasicTreeQues/invert_binary_tree"
              }
            },
            {
              "unversionedId": "Tree/BinaryTree/BasicTreeQues/height_of_binary_tree",
              "id": "Tree/BinaryTree/BasicTreeQues/height_of_binary_tree",
              "title": "Height of Binary Tree",
              "description": "Level - Easy",
              "source": "@site/docs/Tree/BinaryTree/BasicTreeQues/height_of_binary_tree.mdx",
              "sourceDirName": "Tree/BinaryTree/BasicTreeQues",
              "slug": "/Tree/BinaryTree/BasicTreeQues/height_of_binary_tree",
              "permalink": "/docs/Tree/BinaryTree/BasicTreeQues/height_of_binary_tree",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Tree/BinaryTree/BasicTreeQues/height_of_binary_tree.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1,
                "title": "Height of Binary Tree"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Vertical Order Traversal of a Binary Tree",
                "permalink": "/docs/Tree/BinaryTree/BTView/vertical_view_bt"
              },
              "next": {
                "title": "Balanced Binary Tree",
                "permalink": "/docs/Tree/BinaryTree/BasicTreeQues/balanced_binary_tree"
              }
            },
            {
              "unversionedId": "Tree/BinaryTree/BasicTreeQues/invert_binary_tree",
              "id": "Tree/BinaryTree/BasicTreeQues/invert_binary_tree",
              "title": "invert_binary_tree",
              "description": "",
              "source": "@site/docs/Tree/BinaryTree/BasicTreeQues/invert_binary_tree.mdx",
              "sourceDirName": "Tree/BinaryTree/BasicTreeQues",
              "slug": "/Tree/BinaryTree/BasicTreeQues/invert_binary_tree",
              "permalink": "/docs/Tree/BinaryTree/BasicTreeQues/invert_binary_tree",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Tree/BinaryTree/BasicTreeQues/invert_binary_tree.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Flatten Binary Tree to Linked List",
                "permalink": "/docs/Tree/BinaryTree/BasicTreeQues/flatten_bt_to_linkedlist"
              },
              "next": {
                "title": "merge_2_binary_trees",
                "permalink": "/docs/Tree/BinaryTree/BasicTreeQues/merge_2_binary_trees"
              }
            },
            {
              "unversionedId": "Tree/BinaryTree/BasicTreeQues/merge_2_binary_trees",
              "id": "Tree/BinaryTree/BasicTreeQues/merge_2_binary_trees",
              "title": "merge_2_binary_trees",
              "description": "",
              "source": "@site/docs/Tree/BinaryTree/BasicTreeQues/merge_2_binary_trees.mdx",
              "sourceDirName": "Tree/BinaryTree/BasicTreeQues",
              "slug": "/Tree/BinaryTree/BasicTreeQues/merge_2_binary_trees",
              "permalink": "/docs/Tree/BinaryTree/BasicTreeQues/merge_2_binary_trees",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Tree/BinaryTree/BasicTreeQues/merge_2_binary_trees.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "invert_binary_tree",
                "permalink": "/docs/Tree/BinaryTree/BasicTreeQues/invert_binary_tree"
              },
              "next": {
                "title": "same_tree",
                "permalink": "/docs/Tree/BinaryTree/BasicTreeQues/same_tree"
              }
            },
            {
              "unversionedId": "Tree/BinaryTree/BasicTreeQues/same_tree",
              "id": "Tree/BinaryTree/BasicTreeQues/same_tree",
              "title": "same_tree",
              "description": "",
              "source": "@site/docs/Tree/BinaryTree/BasicTreeQues/same_tree.mdx",
              "sourceDirName": "Tree/BinaryTree/BasicTreeQues",
              "slug": "/Tree/BinaryTree/BasicTreeQues/same_tree",
              "permalink": "/docs/Tree/BinaryTree/BasicTreeQues/same_tree",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Tree/BinaryTree/BasicTreeQues/same_tree.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "merge_2_binary_trees",
                "permalink": "/docs/Tree/BinaryTree/BasicTreeQues/merge_2_binary_trees"
              },
              "next": {
                "title": "subtree_of_another_tree",
                "permalink": "/docs/Tree/BinaryTree/BasicTreeQues/subtree_of_another_tree"
              }
            },
            {
              "unversionedId": "Tree/BinaryTree/BasicTreeQues/subtree_of_another_tree",
              "id": "Tree/BinaryTree/BasicTreeQues/subtree_of_another_tree",
              "title": "subtree_of_another_tree",
              "description": "",
              "source": "@site/docs/Tree/BinaryTree/BasicTreeQues/subtree_of_another_tree.mdx",
              "sourceDirName": "Tree/BinaryTree/BasicTreeQues",
              "slug": "/Tree/BinaryTree/BasicTreeQues/subtree_of_another_tree",
              "permalink": "/docs/Tree/BinaryTree/BasicTreeQues/subtree_of_another_tree",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Tree/BinaryTree/BasicTreeQues/subtree_of_another_tree.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "same_tree",
                "permalink": "/docs/Tree/BinaryTree/BasicTreeQues/same_tree"
              },
              "next": {
                "title": "sum_left_leaf",
                "permalink": "/docs/Tree/BinaryTree/BasicTreeQues/sum_left_leaf"
              }
            },
            {
              "unversionedId": "Tree/BinaryTree/BasicTreeQues/sum_left_leaf",
              "id": "Tree/BinaryTree/BasicTreeQues/sum_left_leaf",
              "title": "sum_left_leaf",
              "description": "",
              "source": "@site/docs/Tree/BinaryTree/BasicTreeQues/sum_left_leaf.mdx",
              "sourceDirName": "Tree/BinaryTree/BasicTreeQues",
              "slug": "/Tree/BinaryTree/BasicTreeQues/sum_left_leaf",
              "permalink": "/docs/Tree/BinaryTree/BasicTreeQues/sum_left_leaf",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Tree/BinaryTree/BasicTreeQues/sum_left_leaf.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "subtree_of_another_tree",
                "permalink": "/docs/Tree/BinaryTree/BasicTreeQues/subtree_of_another_tree"
              },
              "next": {
                "title": "symmetric_tree",
                "permalink": "/docs/Tree/BinaryTree/BasicTreeQues/symmetric_tree"
              }
            },
            {
              "unversionedId": "Tree/BinaryTree/BasicTreeQues/symmetric_tree",
              "id": "Tree/BinaryTree/BasicTreeQues/symmetric_tree",
              "title": "symmetric_tree",
              "description": "",
              "source": "@site/docs/Tree/BinaryTree/BasicTreeQues/symmetric_tree.mdx",
              "sourceDirName": "Tree/BinaryTree/BasicTreeQues",
              "slug": "/Tree/BinaryTree/BasicTreeQues/symmetric_tree",
              "permalink": "/docs/Tree/BinaryTree/BasicTreeQues/symmetric_tree",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Tree/BinaryTree/BasicTreeQues/symmetric_tree.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "sum_left_leaf",
                "permalink": "/docs/Tree/BinaryTree/BasicTreeQues/sum_left_leaf"
              },
              "next": {
                "title": "Lowest Common Ancestor of a Binary Tree",
                "permalink": "/docs/Tree/BinaryTree/CommonAncestor/lca"
              }
            },
            {
              "unversionedId": "Tree/BinaryTree/BTView/vertical_view_bt",
              "id": "Tree/BinaryTree/BTView/vertical_view_bt",
              "title": "Vertical Order Traversal of a Binary Tree",
              "description": "Level - Hard",
              "source": "@site/docs/Tree/BinaryTree/BTView/vertical_view_bt.mdx",
              "sourceDirName": "Tree/BinaryTree/BTView",
              "slug": "/Tree/BinaryTree/BTView/vertical_view_bt",
              "permalink": "/docs/Tree/BinaryTree/BTView/vertical_view_bt",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Tree/BinaryTree/BTView/vertical_view_bt.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 4,
              "frontMatter": {
                "sidebar_position": 4,
                "title": "Vertical Order Traversal of a Binary Tree"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Burn Tree",
                "permalink": "/docs/Tree/BinaryTree/AncestorPath/burn_tree"
              },
              "next": {
                "title": "Height of Binary Tree",
                "permalink": "/docs/Tree/BinaryTree/BasicTreeQues/height_of_binary_tree"
              }
            },
            {
              "unversionedId": "Tree/BinaryTree/CommonAncestor/lca",
              "id": "Tree/BinaryTree/CommonAncestor/lca",
              "title": "Lowest Common Ancestor of a Binary Tree",
              "description": "Level - Medium",
              "source": "@site/docs/Tree/BinaryTree/CommonAncestor/lca.mdx",
              "sourceDirName": "Tree/BinaryTree/CommonAncestor",
              "slug": "/Tree/BinaryTree/CommonAncestor/lca",
              "permalink": "/docs/Tree/BinaryTree/CommonAncestor/lca",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Tree/BinaryTree/CommonAncestor/lca.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1,
                "title": "Lowest Common Ancestor of a Binary Tree"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "symmetric_tree",
                "permalink": "/docs/Tree/BinaryTree/BasicTreeQues/symmetric_tree"
              },
              "next": {
                "title": "Min distance between two given nodes of a Binary Tree",
                "permalink": "/docs/Tree/BinaryTree/CommonAncestor/min_distance_bw_2_nodes"
              }
            },
            {
              "unversionedId": "Tree/BinaryTree/CommonAncestor/lca_bst",
              "id": "Tree/BinaryTree/CommonAncestor/lca_bst",
              "title": "lca_bst",
              "description": "",
              "source": "@site/docs/Tree/BinaryTree/CommonAncestor/lca_bst.mdx",
              "sourceDirName": "Tree/BinaryTree/CommonAncestor",
              "slug": "/Tree/BinaryTree/CommonAncestor/lca_bst",
              "permalink": "/docs/Tree/BinaryTree/CommonAncestor/lca_bst",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Tree/BinaryTree/CommonAncestor/lca_bst.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Min distance between two given nodes of a Binary Tree",
                "permalink": "/docs/Tree/BinaryTree/CommonAncestor/min_distance_bw_2_nodes"
              },
              "next": {
                "title": "step-by-step-directions-from-a-binary-tree-node-to-another",
                "permalink": "/docs/Tree/BinaryTree/CommonAncestor/step-by-step-directions-from-a-binary-tree-node-to-another"
              }
            },
            {
              "unversionedId": "Tree/BinaryTree/CommonAncestor/min_distance_bw_2_nodes",
              "id": "Tree/BinaryTree/CommonAncestor/min_distance_bw_2_nodes",
              "title": "Min distance between two given nodes of a Binary Tree",
              "description": "Level - Medium",
              "source": "@site/docs/Tree/BinaryTree/CommonAncestor/min_distance_bw_2_nodes.mdx",
              "sourceDirName": "Tree/BinaryTree/CommonAncestor",
              "slug": "/Tree/BinaryTree/CommonAncestor/min_distance_bw_2_nodes",
              "permalink": "/docs/Tree/BinaryTree/CommonAncestor/min_distance_bw_2_nodes",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Tree/BinaryTree/CommonAncestor/min_distance_bw_2_nodes.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 2,
              "frontMatter": {
                "sidebar_position": 2,
                "title": "Min distance between two given nodes of a Binary Tree"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Lowest Common Ancestor of a Binary Tree",
                "permalink": "/docs/Tree/BinaryTree/CommonAncestor/lca"
              },
              "next": {
                "title": "lca_bst",
                "permalink": "/docs/Tree/BinaryTree/CommonAncestor/lca_bst"
              }
            },
            {
              "unversionedId": "Tree/BinaryTree/CommonAncestor/step-by-step-directions-from-a-binary-tree-node-to-another",
              "id": "Tree/BinaryTree/CommonAncestor/step-by-step-directions-from-a-binary-tree-node-to-another",
              "title": "step-by-step-directions-from-a-binary-tree-node-to-another",
              "description": "",
              "source": "@site/docs/Tree/BinaryTree/CommonAncestor/step-by-step-directions-from-a-binary-tree-node-to-another.mdx",
              "sourceDirName": "Tree/BinaryTree/CommonAncestor",
              "slug": "/Tree/BinaryTree/CommonAncestor/step-by-step-directions-from-a-binary-tree-node-to-another",
              "permalink": "/docs/Tree/BinaryTree/CommonAncestor/step-by-step-directions-from-a-binary-tree-node-to-another",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Tree/BinaryTree/CommonAncestor/step-by-step-directions-from-a-binary-tree-node-to-another.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "lca_bst",
                "permalink": "/docs/Tree/BinaryTree/CommonAncestor/lca_bst"
              },
              "next": {
                "title": "count_complete_tree_nodes",
                "permalink": "/docs/Tree/BinaryTree/CompleteTree/count_complete_tree_nodes"
              }
            },
            {
              "unversionedId": "Tree/BinaryTree/CompleteTree/count_complete_tree_nodes",
              "id": "Tree/BinaryTree/CompleteTree/count_complete_tree_nodes",
              "title": "count_complete_tree_nodes",
              "description": "",
              "source": "@site/docs/Tree/BinaryTree/CompleteTree/count_complete_tree_nodes.mdx",
              "sourceDirName": "Tree/BinaryTree/CompleteTree",
              "slug": "/Tree/BinaryTree/CompleteTree/count_complete_tree_nodes",
              "permalink": "/docs/Tree/BinaryTree/CompleteTree/count_complete_tree_nodes",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Tree/BinaryTree/CompleteTree/count_complete_tree_nodes.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "step-by-step-directions-from-a-binary-tree-node-to-another",
                "permalink": "/docs/Tree/BinaryTree/CommonAncestor/step-by-step-directions-from-a-binary-tree-node-to-another"
              },
              "next": {
                "title": "Construct Binary Tree from Preorder and Inorder Traversal",
                "permalink": "/docs/Tree/BinaryTree/ConstructBinaryTreeFromTraversal/construct_from_inorder_preorder"
              }
            },
            {
              "unversionedId": "Tree/BinaryTree/ConstructBinaryTreeFromTraversal/construct_from_inorder_preorder",
              "id": "Tree/BinaryTree/ConstructBinaryTreeFromTraversal/construct_from_inorder_preorder",
              "title": "Construct Binary Tree from Preorder and Inorder Traversal",
              "description": "Level - Medium",
              "source": "@site/docs/Tree/BinaryTree/ConstructBinaryTreeFromTraversal/construct_from_inorder_preorder.mdx",
              "sourceDirName": "Tree/BinaryTree/ConstructBinaryTreeFromTraversal",
              "slug": "/Tree/BinaryTree/ConstructBinaryTreeFromTraversal/construct_from_inorder_preorder",
              "permalink": "/docs/Tree/BinaryTree/ConstructBinaryTreeFromTraversal/construct_from_inorder_preorder",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Tree/BinaryTree/ConstructBinaryTreeFromTraversal/construct_from_inorder_preorder.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1,
                "title": "Construct Binary Tree from Preorder and Inorder Traversal"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "count_complete_tree_nodes",
                "permalink": "/docs/Tree/BinaryTree/CompleteTree/count_complete_tree_nodes"
              },
              "next": {
                "title": "Construct Binary Tree from Preorder and Postorder Traversal",
                "permalink": "/docs/Tree/BinaryTree/ConstructBinaryTreeFromTraversal/construct_from_preorder_postorder"
              }
            },
            {
              "unversionedId": "Tree/BinaryTree/ConstructBinaryTreeFromTraversal/construct_from_preorder_postorder",
              "id": "Tree/BinaryTree/ConstructBinaryTreeFromTraversal/construct_from_preorder_postorder",
              "title": "Construct Binary Tree from Preorder and Postorder Traversal",
              "description": "Level - Medium",
              "source": "@site/docs/Tree/BinaryTree/ConstructBinaryTreeFromTraversal/construct_from_preorder_postorder.mdx",
              "sourceDirName": "Tree/BinaryTree/ConstructBinaryTreeFromTraversal",
              "slug": "/Tree/BinaryTree/ConstructBinaryTreeFromTraversal/construct_from_preorder_postorder",
              "permalink": "/docs/Tree/BinaryTree/ConstructBinaryTreeFromTraversal/construct_from_preorder_postorder",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Tree/BinaryTree/ConstructBinaryTreeFromTraversal/construct_from_preorder_postorder.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 2,
              "frontMatter": {
                "sidebar_position": 2,
                "title": "Construct Binary Tree from Preorder and Postorder Traversal"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Construct Binary Tree from Preorder and Inorder Traversal",
                "permalink": "/docs/Tree/BinaryTree/ConstructBinaryTreeFromTraversal/construct_from_inorder_preorder"
              },
              "next": {
                "title": "Path Sum",
                "permalink": "/docs/Tree/BinaryTree/PathSum/path_sum"
              }
            },
            {
              "unversionedId": "Tree/BinaryTree/PathSum/max_path_sum",
              "id": "Tree/BinaryTree/PathSum/max_path_sum",
              "title": "Binary Tree Maximum Path Sum",
              "description": "Level - Hard",
              "source": "@site/docs/Tree/BinaryTree/PathSum/max_path_sum.mdx",
              "sourceDirName": "Tree/BinaryTree/PathSum",
              "slug": "/Tree/BinaryTree/PathSum/max_path_sum",
              "permalink": "/docs/Tree/BinaryTree/PathSum/max_path_sum",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Tree/BinaryTree/PathSum/max_path_sum.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 7,
              "frontMatter": {
                "sidebar_position": 7,
                "title": "Binary Tree Maximum Path Sum"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Path Sum 3",
                "permalink": "/docs/Tree/BinaryTree/PathSum/path_sum_3"
              },
              "next": {
                "title": "Path Sum II",
                "permalink": "/docs/Tree/BinaryTree/PathSum/path_sum_2"
              }
            },
            {
              "unversionedId": "Tree/BinaryTree/PathSum/path_sum",
              "id": "Tree/BinaryTree/PathSum/path_sum",
              "title": "Path Sum",
              "description": "Level - Easy",
              "source": "@site/docs/Tree/BinaryTree/PathSum/path_sum.mdx",
              "sourceDirName": "Tree/BinaryTree/PathSum",
              "slug": "/Tree/BinaryTree/PathSum/path_sum",
              "permalink": "/docs/Tree/BinaryTree/PathSum/path_sum",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Tree/BinaryTree/PathSum/path_sum.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1,
                "title": "Path Sum"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Construct Binary Tree from Preorder and Postorder Traversal",
                "permalink": "/docs/Tree/BinaryTree/ConstructBinaryTreeFromTraversal/construct_from_preorder_postorder"
              },
              "next": {
                "title": "Sum of Distances in Tree",
                "permalink": "/docs/Tree/BinaryTree/PathSum/sum_of_distances_intree"
              }
            },
            {
              "unversionedId": "Tree/BinaryTree/PathSum/path_sum_2",
              "id": "Tree/BinaryTree/PathSum/path_sum_2",
              "title": "Path Sum II",
              "description": "Level - Medium",
              "source": "@site/docs/Tree/BinaryTree/PathSum/path_sum_2.mdx",
              "sourceDirName": "Tree/BinaryTree/PathSum",
              "slug": "/Tree/BinaryTree/PathSum/path_sum_2",
              "permalink": "/docs/Tree/BinaryTree/PathSum/path_sum_2",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Tree/BinaryTree/PathSum/path_sum_2.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 12,
              "frontMatter": {
                "sidebar_position": 12,
                "title": "Path Sum II"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Binary Tree Maximum Path Sum",
                "permalink": "/docs/Tree/BinaryTree/PathSum/max_path_sum"
              },
              "next": {
                "title": "Level Order Traversal",
                "permalink": "/docs/Tree/BinaryTree/Traversals/LevelOrderTraversal/level_order_traversal"
              }
            },
            {
              "unversionedId": "Tree/BinaryTree/PathSum/path_sum_3",
              "id": "Tree/BinaryTree/PathSum/path_sum_3",
              "title": "Path Sum 3",
              "description": "Level - Medium",
              "source": "@site/docs/Tree/BinaryTree/PathSum/path_sum_3.mdx",
              "sourceDirName": "Tree/BinaryTree/PathSum",
              "slug": "/Tree/BinaryTree/PathSum/path_sum_3",
              "permalink": "/docs/Tree/BinaryTree/PathSum/path_sum_3",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Tree/BinaryTree/PathSum/path_sum_3.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 6,
              "frontMatter": {
                "sidebar_position": 6,
                "title": "Path Sum 3"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Sum of Distances in Tree",
                "permalink": "/docs/Tree/BinaryTree/PathSum/sum_of_distances_intree"
              },
              "next": {
                "title": "Binary Tree Maximum Path Sum",
                "permalink": "/docs/Tree/BinaryTree/PathSum/max_path_sum"
              }
            },
            {
              "unversionedId": "Tree/BinaryTree/PathSum/sum_of_distances_intree",
              "id": "Tree/BinaryTree/PathSum/sum_of_distances_intree",
              "title": "Sum of Distances in Tree",
              "description": "Level - Hard",
              "source": "@site/docs/Tree/BinaryTree/PathSum/sum_of_distances_intree.mdx",
              "sourceDirName": "Tree/BinaryTree/PathSum",
              "slug": "/Tree/BinaryTree/PathSum/sum_of_distances_intree",
              "permalink": "/docs/Tree/BinaryTree/PathSum/sum_of_distances_intree",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Tree/BinaryTree/PathSum/sum_of_distances_intree.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 5,
              "frontMatter": {
                "sidebar_position": 5,
                "title": "Sum of Distances in Tree"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Path Sum",
                "permalink": "/docs/Tree/BinaryTree/PathSum/path_sum"
              },
              "next": {
                "title": "Path Sum 3",
                "permalink": "/docs/Tree/BinaryTree/PathSum/path_sum_3"
              }
            },
            {
              "unversionedId": "Tree/BinaryTree/Traversals/inorder",
              "id": "Tree/BinaryTree/Traversals/inorder",
              "title": "inorder",
              "description": "",
              "source": "@site/docs/Tree/BinaryTree/Traversals/inorder.mdx",
              "sourceDirName": "Tree/BinaryTree/Traversals",
              "slug": "/Tree/BinaryTree/Traversals/inorder",
              "permalink": "/docs/Tree/BinaryTree/Traversals/inorder",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Tree/BinaryTree/Traversals/inorder.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "serialize_deserialize_bt",
                "permalink": "/docs/Tree/BinaryTree/Traversals/LevelOrderTraversal/serialize_deserialize_bt"
              },
              "next": {
                "title": "postorder",
                "permalink": "/docs/Tree/BinaryTree/Traversals/postorder"
              }
            },
            {
              "unversionedId": "Tree/BinaryTree/Traversals/LevelOrderTraversal/level_order_traversal",
              "id": "Tree/BinaryTree/Traversals/LevelOrderTraversal/level_order_traversal",
              "title": "Level Order Traversal",
              "description": "Level - Medium",
              "source": "@site/docs/Tree/BinaryTree/Traversals/LevelOrderTraversal/level_order_traversal.mdx",
              "sourceDirName": "Tree/BinaryTree/Traversals/LevelOrderTraversal",
              "slug": "/Tree/BinaryTree/Traversals/LevelOrderTraversal/level_order_traversal",
              "permalink": "/docs/Tree/BinaryTree/Traversals/LevelOrderTraversal/level_order_traversal",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Tree/BinaryTree/Traversals/LevelOrderTraversal/level_order_traversal.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 6,
              "frontMatter": {
                "sidebar_position": 6,
                "title": "Level Order Traversal"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Path Sum II",
                "permalink": "/docs/Tree/BinaryTree/PathSum/path_sum_2"
              },
              "next": {
                "title": "Maximum Width of Binary Tree",
                "permalink": "/docs/Tree/BinaryTree/Traversals/LevelOrderTraversal/maximum_width_bt"
              }
            },
            {
              "unversionedId": "Tree/BinaryTree/Traversals/LevelOrderTraversal/maximum_width_bt",
              "id": "Tree/BinaryTree/Traversals/LevelOrderTraversal/maximum_width_bt",
              "title": "Maximum Width of Binary Tree",
              "description": "Level - Medium",
              "source": "@site/docs/Tree/BinaryTree/Traversals/LevelOrderTraversal/maximum_width_bt.mdx",
              "sourceDirName": "Tree/BinaryTree/Traversals/LevelOrderTraversal",
              "slug": "/Tree/BinaryTree/Traversals/LevelOrderTraversal/maximum_width_bt",
              "permalink": "/docs/Tree/BinaryTree/Traversals/LevelOrderTraversal/maximum_width_bt",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Tree/BinaryTree/Traversals/LevelOrderTraversal/maximum_width_bt.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 8,
              "frontMatter": {
                "sidebar_position": 8,
                "title": "Maximum Width of Binary Tree"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Level Order Traversal",
                "permalink": "/docs/Tree/BinaryTree/Traversals/LevelOrderTraversal/level_order_traversal"
              },
              "next": {
                "title": "Populating Next Right Pointers in Each Node",
                "permalink": "/docs/Tree/BinaryTree/Traversals/LevelOrderTraversal/populate_next_right_pointer"
              }
            },
            {
              "unversionedId": "Tree/BinaryTree/Traversals/LevelOrderTraversal/populate_next_right_pointer",
              "id": "Tree/BinaryTree/Traversals/LevelOrderTraversal/populate_next_right_pointer",
              "title": "Populating Next Right Pointers in Each Node",
              "description": "Level - Medium",
              "source": "@site/docs/Tree/BinaryTree/Traversals/LevelOrderTraversal/populate_next_right_pointer.mdx",
              "sourceDirName": "Tree/BinaryTree/Traversals/LevelOrderTraversal",
              "slug": "/Tree/BinaryTree/Traversals/LevelOrderTraversal/populate_next_right_pointer",
              "permalink": "/docs/Tree/BinaryTree/Traversals/LevelOrderTraversal/populate_next_right_pointer",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Tree/BinaryTree/Traversals/LevelOrderTraversal/populate_next_right_pointer.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 11,
              "frontMatter": {
                "sidebar_position": 11,
                "title": "Populating Next Right Pointers in Each Node"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Maximum Width of Binary Tree",
                "permalink": "/docs/Tree/BinaryTree/Traversals/LevelOrderTraversal/maximum_width_bt"
              },
              "next": {
                "title": "serialize_deserialize_bt",
                "permalink": "/docs/Tree/BinaryTree/Traversals/LevelOrderTraversal/serialize_deserialize_bt"
              }
            },
            {
              "unversionedId": "Tree/BinaryTree/Traversals/LevelOrderTraversal/serialize_deserialize_bt",
              "id": "Tree/BinaryTree/Traversals/LevelOrderTraversal/serialize_deserialize_bt",
              "title": "serialize_deserialize_bt",
              "description": "",
              "source": "@site/docs/Tree/BinaryTree/Traversals/LevelOrderTraversal/serialize_deserialize_bt.mdx",
              "sourceDirName": "Tree/BinaryTree/Traversals/LevelOrderTraversal",
              "slug": "/Tree/BinaryTree/Traversals/LevelOrderTraversal/serialize_deserialize_bt",
              "permalink": "/docs/Tree/BinaryTree/Traversals/LevelOrderTraversal/serialize_deserialize_bt",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Tree/BinaryTree/Traversals/LevelOrderTraversal/serialize_deserialize_bt.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Populating Next Right Pointers in Each Node",
                "permalink": "/docs/Tree/BinaryTree/Traversals/LevelOrderTraversal/populate_next_right_pointer"
              },
              "next": {
                "title": "inorder",
                "permalink": "/docs/Tree/BinaryTree/Traversals/inorder"
              }
            },
            {
              "unversionedId": "Tree/BinaryTree/Traversals/postorder",
              "id": "Tree/BinaryTree/Traversals/postorder",
              "title": "postorder",
              "description": "",
              "source": "@site/docs/Tree/BinaryTree/Traversals/postorder.mdx",
              "sourceDirName": "Tree/BinaryTree/Traversals",
              "slug": "/Tree/BinaryTree/Traversals/postorder",
              "permalink": "/docs/Tree/BinaryTree/Traversals/postorder",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Tree/BinaryTree/Traversals/postorder.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "inorder",
                "permalink": "/docs/Tree/BinaryTree/Traversals/inorder"
              },
              "next": {
                "title": "preorder",
                "permalink": "/docs/Tree/BinaryTree/Traversals/preorder"
              }
            },
            {
              "unversionedId": "Tree/BinaryTree/Traversals/preorder",
              "id": "Tree/BinaryTree/Traversals/preorder",
              "title": "preorder",
              "description": "",
              "source": "@site/docs/Tree/BinaryTree/Traversals/preorder.mdx",
              "sourceDirName": "Tree/BinaryTree/Traversals",
              "slug": "/Tree/BinaryTree/Traversals/preorder",
              "permalink": "/docs/Tree/BinaryTree/Traversals/preorder",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Tree/BinaryTree/Traversals/preorder.mdx",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "postorder",
                "permalink": "/docs/Tree/BinaryTree/Traversals/postorder"
              },
              "next": {
                "title": "Introduction to Trie",
                "permalink": "/docs/Trie/introduction"
              }
            },
            {
              "unversionedId": "Trie/introduction",
              "id": "Trie/introduction",
              "title": "Introduction to Trie",
              "description": "What is Trie ?",
              "source": "@site/docs/Trie/introduction.mdx",
              "sourceDirName": "Trie",
              "slug": "/Trie/introduction",
              "permalink": "/docs/Trie/introduction",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Trie/introduction.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1,
                "title": "Introduction to Trie"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "preorder",
                "permalink": "/docs/Tree/BinaryTree/Traversals/preorder"
              },
              "next": {
                "title": "Replace Words",
                "permalink": "/docs/Trie/replace_words"
              }
            },
            {
              "unversionedId": "Trie/replace_words",
              "id": "Trie/replace_words",
              "title": "Replace Words",
              "description": "Level - Medium",
              "source": "@site/docs/Trie/replace_words.mdx",
              "sourceDirName": "Trie",
              "slug": "/Trie/replace_words",
              "permalink": "/docs/Trie/replace_words",
              "draft": false,
              "editUrl": "https://github.com/blogs-era/sde-babu-blog-content/tree/main/docs/Trie/replace_words.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 2,
              "frontMatter": {
                "sidebar_position": 2,
                "title": "Replace Words"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Introduction to Trie",
                "permalink": "/docs/Trie/introduction"
              }
            }
          ],
          "drafts": [],
          "sidebars": {
            "tutorialSidebar": [
              {
                "type": "doc",
                "id": "intro"
              },
              {
                "type": "category",
                "label": "HashMaps",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "doc",
                    "id": "HashMaps/first_unique_character_in_string"
                  },
                  {
                    "type": "doc",
                    "id": "HashMaps/introduction"
                  },
                  {
                    "type": "doc",
                    "id": "HashMaps/top_k_freq"
                  }
                ],
                "link": {
                  "type": "generated-index",
                  "description": "HashMap data structure which can store key value pairs and help a lot in most of the questions",
                  "slug": "/category/hashmaps",
                  "permalink": "/docs/category/hashmaps"
                }
              },
              {
                "type": "category",
                "label": "LinkedList",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "doc",
                    "id": "LinkedList/partition_list"
                  },
                  {
                    "type": "doc",
                    "id": "LinkedList/odd_even"
                  },
                  {
                    "type": "doc",
                    "id": "LinkedList/segregate_even_odd"
                  },
                  {
                    "type": "doc",
                    "id": "LinkedList/rotate_list"
                  },
                  {
                    "type": "doc",
                    "id": "LinkedList/remove_duplicate_2"
                  },
                  {
                    "type": "doc",
                    "id": "LinkedList/copy_list_random_pointer"
                  },
                  {
                    "type": "doc",
                    "id": "LinkedList/remove_nth_node_from_end"
                  },
                  {
                    "type": "category",
                    "label": "Basic",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "doc",
                        "id": "LinkedList/Basic/reverse_linked_list"
                      },
                      {
                        "type": "doc",
                        "id": "LinkedList/Basic/merge_2_sorted_list"
                      },
                      {
                        "type": "doc",
                        "id": "LinkedList/Basic/reorder_list"
                      },
                      {
                        "type": "doc",
                        "id": "LinkedList/Basic/swap_nodes_in_pair"
                      }
                    ]
                  },
                  {
                    "type": "category",
                    "label": "ListCycle",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "doc",
                        "id": "LinkedList/ListCycle/first_node_in_cycle"
                      }
                    ]
                  },
                  {
                    "type": "category",
                    "label": "Maths",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "doc",
                        "id": "LinkedList/Maths/add_two_numers"
                      },
                      {
                        "type": "doc",
                        "id": "LinkedList/Maths/add_number_2"
                      }
                    ]
                  },
                  {
                    "type": "doc",
                    "id": "LinkedList/intersection_linked_list"
                  },
                  {
                    "type": "doc",
                    "id": "LinkedList/remove_duplicate_1"
                  }
                ],
                "link": {
                  "type": "generated-index",
                  "description": "Linked List a linear data structure which contains multiple nodes and each node is mainly a collection of data and addresses.all the nodes are connected",
                  "slug": "/category/linkedlist",
                  "permalink": "/docs/category/linkedlist"
                }
              },
              {
                "type": "category",
                "label": "Queue",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "doc",
                    "id": "Queue/sliding_window_maximum"
                  },
                  {
                    "type": "category",
                    "label": "BFS",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "doc",
                        "id": "Queue/BFS/introduction"
                      },
                      {
                        "type": "doc",
                        "id": "Queue/BFS/number_of_island"
                      }
                    ]
                  }
                ],
                "link": {
                  "type": "generated-index",
                  "description": "Queue data structure [FIFO] which is used in so many problems and the most important data structure",
                  "slug": "/category/queue",
                  "permalink": "/docs/category/queue"
                }
              },
              {
                "type": "category",
                "label": "DynamicProgramming",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "doc",
                    "id": "DynamicProgramming/frog_jump"
                  },
                  {
                    "type": "category",
                    "label": "1D-DP",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "doc",
                        "id": "DynamicProgramming/1D-DP/unique_binary_search_trees"
                      },
                      {
                        "type": "doc",
                        "id": "DynamicProgramming/1D-DP/longest_increasing_subsequence"
                      },
                      {
                        "type": "doc",
                        "id": "DynamicProgramming/1D-DP/jump_game"
                      },
                      {
                        "type": "doc",
                        "id": "DynamicProgramming/1D-DP/coin_change"
                      },
                      {
                        "type": "doc",
                        "id": "DynamicProgramming/1D-DP/decode_ways"
                      }
                    ]
                  },
                  {
                    "type": "category",
                    "label": "2D-DP",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "doc",
                        "id": "DynamicProgramming/2D-DP/maxlen_repeated_subarray"
                      },
                      {
                        "type": "doc",
                        "id": "DynamicProgramming/2D-DP/minimum-difficulty-of-a-job-schedule"
                      }
                    ]
                  },
                  {
                    "type": "category",
                    "label": "BuySellStocks",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "doc",
                        "id": "DynamicProgramming/BuySellStocks/buy_sell_stocks_1"
                      },
                      {
                        "type": "doc",
                        "id": "DynamicProgramming/BuySellStocks/buy_sell_stocks_2"
                      },
                      {
                        "type": "doc",
                        "id": "DynamicProgramming/BuySellStocks/buy_sell_stocks_3"
                      },
                      {
                        "type": "doc",
                        "id": "DynamicProgramming/BuySellStocks/buy_sell_stocks_4"
                      }
                    ]
                  },
                  {
                    "type": "category",
                    "label": "DP-Rectangle",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "doc",
                        "id": "DynamicProgramming/DP-Rectangle/count-square-submatrices-with-all-ones"
                      },
                      {
                        "type": "doc",
                        "id": "DynamicProgramming/DP-Rectangle/maximal_square"
                      },
                      {
                        "type": "doc",
                        "id": "DynamicProgramming/DP-Rectangle/maximal_rectangle"
                      }
                    ]
                  },
                  {
                    "type": "category",
                    "label": "DPStrings",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "doc",
                        "id": "DynamicProgramming/DPStrings/longest_common_subsequence"
                      },
                      {
                        "type": "doc",
                        "id": "DynamicProgramming/DPStrings/longest_common_substring"
                      },
                      {
                        "type": "doc",
                        "id": "DynamicProgramming/DPStrings/longest_valid_paranthesis"
                      }
                    ]
                  },
                  {
                    "type": "category",
                    "label": "PreComputation",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "doc",
                        "id": "DynamicProgramming/PreComputation/product_except_self"
                      }
                    ]
                  }
                ],
                "link": {
                  "type": "generated-index",
                  "description": "Dynamic Programming which mostly help us to solve the recursive problem in optimized way",
                  "slug": "/category/dynamicprogramming",
                  "permalink": "/docs/category/dynamicprogramming"
                }
              },
              {
                "type": "category",
                "label": "Stack",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "doc",
                    "id": "Stack/sum-of-subarray-minimums"
                  },
                  {
                    "type": "category",
                    "label": "MonotonicStack",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "doc",
                        "id": "Stack/MonotonicStack/next_greater_element"
                      },
                      {
                        "type": "doc",
                        "id": "Stack/MonotonicStack/introduction"
                      },
                      {
                        "type": "doc",
                        "id": "Stack/MonotonicStack/largest_rectange_histogram"
                      },
                      {
                        "type": "doc",
                        "id": "Stack/MonotonicStack/maximum_binary_tree"
                      },
                      {
                        "type": "doc",
                        "id": "Stack/MonotonicStack/most_competitive_subsequence"
                      },
                      {
                        "type": "doc",
                        "id": "Stack/MonotonicStack/remove_k_digits"
                      }
                    ]
                  },
                  {
                    "type": "doc",
                    "id": "Stack/reverse_polish_notation"
                  }
                ],
                "link": {
                  "type": "generated-index",
                  "description": "Queue data structure [LIFO] which is used in so many problems and the most important data structure",
                  "slug": "/category/stack",
                  "permalink": "/docs/category/stack"
                }
              },
              {
                "type": "category",
                "label": "Arrays",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "category",
                    "label": "BasicQues",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "doc",
                        "id": "Arrays/BasicQues/majority_element"
                      }
                    ]
                  },
                  {
                    "type": "category",
                    "label": "CycleTechniques",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "doc",
                        "id": "Arrays/CycleTechniques/duplicate_in_array"
                      },
                      {
                        "type": "doc",
                        "id": "Arrays/CycleTechniques/first_missing_pos"
                      },
                      {
                        "type": "doc",
                        "id": "Arrays/CycleTechniques/find_all_duplicates"
                      }
                    ]
                  },
                  {
                    "type": "category",
                    "label": "Interval",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "doc",
                        "id": "Arrays/Interval/merge_intervals"
                      }
                    ]
                  },
                  {
                    "type": "category",
                    "label": "KadaneAlgo",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "doc",
                        "id": "Arrays/KadaneAlgo/max_subarray"
                      },
                      {
                        "type": "doc",
                        "id": "Arrays/KadaneAlgo/max_product_subarray"
                      }
                    ]
                  },
                  {
                    "type": "category",
                    "label": "Matrix",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "doc",
                        "id": "Arrays/Matrix/set_matrix_0"
                      },
                      {
                        "type": "doc",
                        "id": "Arrays/Matrix/spiral_matrix"
                      }
                    ]
                  },
                  {
                    "type": "category",
                    "label": "N-Sum",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "doc",
                        "id": "Arrays/N-Sum/sum-closest"
                      },
                      {
                        "type": "doc",
                        "id": "Arrays/N-Sum/sum"
                      },
                      {
                        "type": "doc",
                        "id": "Arrays/N-Sum/sum"
                      },
                      {
                        "type": "doc",
                        "id": "Arrays/N-Sum/sum"
                      }
                    ]
                  },
                  {
                    "type": "category",
                    "label": "Prefix-Sum",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "doc",
                        "id": "Arrays/Prefix-Sum/running_sum"
                      },
                      {
                        "type": "doc",
                        "id": "Arrays/Prefix-Sum/continuous-subarray-sum"
                      },
                      {
                        "type": "doc",
                        "id": "Arrays/Prefix-Sum/pivot_index"
                      },
                      {
                        "type": "doc",
                        "id": "Arrays/Prefix-Sum/subarray_sum_divisible_k"
                      },
                      {
                        "type": "doc",
                        "id": "Arrays/Prefix-Sum/subarray_sum_equals_k"
                      }
                    ]
                  },
                  {
                    "type": "category",
                    "label": "TwoPointers",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "doc",
                        "id": "Arrays/TwoPointers/trapping_rain_water"
                      },
                      {
                        "type": "doc",
                        "id": "Arrays/TwoPointers/next_permutation"
                      },
                      {
                        "type": "doc",
                        "id": "Arrays/TwoPointers/container_with_most_water"
                      },
                      {
                        "type": "doc",
                        "id": "Arrays/TwoPointers/merge_sorted_arrays"
                      },
                      {
                        "type": "doc",
                        "id": "Arrays/TwoPointers/move_zeroes"
                      },
                      {
                        "type": "doc",
                        "id": "Arrays/TwoPointers/remove-duplicates-from-sorted-array"
                      },
                      {
                        "type": "doc",
                        "id": "Arrays/TwoPointers/sort_colors"
                      },
                      {
                        "type": "doc",
                        "id": "Arrays/TwoPointers/squares_sorted_arr"
                      }
                    ]
                  }
                ],
                "link": {
                  "type": "generated-index",
                  "description": "Arrays data structure, a primitive data structure for storing data with same data type",
                  "slug": "/category/arrays",
                  "permalink": "/docs/category/arrays"
                }
              },
              {
                "type": "category",
                "label": "Segment Trees",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "doc",
                    "id": "SegmentTrees/intro"
                  }
                ],
                "link": {
                  "type": "generated-index",
                  "description": "segment tree is a tree data structure used to store information in intervals and segments, and we can query the results for a given range",
                  "slug": "/category/segment-trees",
                  "permalink": "/docs/category/segment-trees"
                }
              },
              {
                "type": "category",
                "label": "BitManipulation",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "doc",
                    "id": "BitManipulation/power_of_2"
                  }
                ]
              },
              {
                "type": "category",
                "label": "Design",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "doc",
                    "id": "Design/lfu_cache"
                  },
                  {
                    "type": "doc",
                    "id": "Design/lru_cache"
                  },
                  {
                    "type": "doc",
                    "id": "Design/min_stack"
                  },
                  {
                    "type": "doc",
                    "id": "Design/time-based-key-value-store"
                  }
                ]
              },
              {
                "type": "category",
                "label": "Graph",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "category",
                    "label": "CycleDetection",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "doc",
                        "id": "Graph/CycleDetection/directed_graph"
                      },
                      {
                        "type": "doc",
                        "id": "Graph/CycleDetection/undirected_graph"
                      }
                    ]
                  },
                  {
                    "type": "category",
                    "label": "DisjointSetUnion",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "doc",
                        "id": "Graph/DisjointSetUnion/introduction"
                      },
                      {
                        "type": "doc",
                        "id": "Graph/DisjointSetUnion/redundant_connection"
                      },
                      {
                        "type": "doc",
                        "id": "Graph/DisjointSetUnion/number_of_operation"
                      }
                    ]
                  },
                  {
                    "type": "category",
                    "label": "FloodFill",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "doc",
                        "id": "Graph/FloodFill/introduction"
                      },
                      {
                        "type": "doc",
                        "id": "Graph/FloodFill/pacific_atlantic_water_flow"
                      },
                      {
                        "type": "doc",
                        "id": "Graph/FloodFill/replace_o_x_surrounded_x"
                      }
                    ]
                  },
                  {
                    "type": "category",
                    "label": "ShortestPath",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "category",
                        "label": "Dijkstra",
                        "collapsible": true,
                        "collapsed": true,
                        "items": [
                          {
                            "type": "doc",
                            "id": "Graph/ShortestPath/Dijkstra/introduction"
                          },
                          {
                            "type": "doc",
                            "id": "Graph/ShortestPath/Dijkstra/network_delay_time"
                          },
                          {
                            "type": "doc",
                            "id": "Graph/ShortestPath/Dijkstra/cheapest-flights-within-k-stops"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "type": "category",
                    "label": "TarjanAlgo",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "doc",
                        "id": "Graph/TarjanAlgo/introduction"
                      }
                    ]
                  },
                  {
                    "type": "category",
                    "label": "TopoSort",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "doc",
                        "id": "Graph/TopoSort/introduction"
                      }
                    ]
                  },
                  {
                    "type": "doc",
                    "id": "Graph/clone_graph"
                  },
                  {
                    "type": "doc",
                    "id": "Graph/is_graph_bipartite"
                  }
                ]
              },
              {
                "type": "category",
                "label": "Greedy",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "doc",
                    "id": "Greedy/gas_station"
                  },
                  {
                    "type": "doc",
                    "id": "Greedy/max_number_1s"
                  },
                  {
                    "type": "doc",
                    "id": "Greedy/jump_game"
                  },
                  {
                    "type": "doc",
                    "id": "Greedy/max_events_canbe_attended"
                  },
                  {
                    "type": "doc",
                    "id": "Greedy/min_cost_leaf_values"
                  },
                  {
                    "type": "doc",
                    "id": "Greedy/min_time_to_make_rope_colorful"
                  },
                  {
                    "type": "doc",
                    "id": "Greedy/minimum-deletions-to-make-character-frequencies-unique"
                  },
                  {
                    "type": "doc",
                    "id": "Greedy/non_overlapping_intervals"
                  }
                ]
              },
              {
                "type": "category",
                "label": "Heap",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "doc",
                    "id": "Heap/introduction"
                  },
                  {
                    "type": "category",
                    "label": "Heap",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "doc",
                        "id": "Heap/Heap/median_stream"
                      }
                    ]
                  },
                  {
                    "type": "category",
                    "label": "PriorityQueue",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "doc",
                        "id": "Heap/PriorityQueue/k-closest-points"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "category",
                "label": "Maths",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "doc",
                    "id": "Maths/permutation_sequence"
                  },
                  {
                    "type": "doc",
                    "id": "Maths/missing_num"
                  },
                  {
                    "type": "doc",
                    "id": "Maths/atoi"
                  },
                  {
                    "type": "doc",
                    "id": "Maths/min_moves_for_equal_array"
                  },
                  {
                    "type": "doc",
                    "id": "Maths/multiply_string"
                  },
                  {
                    "type": "doc",
                    "id": "Maths/plus_one"
                  },
                  {
                    "type": "doc",
                    "id": "Maths/pow_x_n"
                  }
                ]
              },
              {
                "type": "category",
                "label": "Recursion",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "category",
                    "label": "Backtracking",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "doc",
                        "id": "Recursion/Backtracking/combination_sum_1"
                      },
                      {
                        "type": "doc",
                        "id": "Recursion/Backtracking/generate_paranthesis"
                      },
                      {
                        "type": "doc",
                        "id": "Recursion/Backtracking/partition_k_eqal_sum_subset"
                      },
                      {
                        "type": "doc",
                        "id": "Recursion/Backtracking/subset_1"
                      }
                    ]
                  },
                  {
                    "type": "category",
                    "label": "DFS",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "doc",
                        "id": "Recursion/DFS/longest_increasing_path_matrix"
                      },
                      {
                        "type": "doc",
                        "id": "Recursion/DFS/shortest_bridge"
                      },
                      {
                        "type": "doc",
                        "id": "Recursion/DFS/number_of_closed_island"
                      },
                      {
                        "type": "doc",
                        "id": "Recursion/DFS/making_large_island"
                      },
                      {
                        "type": "doc",
                        "id": "Recursion/DFS/introduction"
                      },
                      {
                        "type": "doc",
                        "id": "Recursion/DFS/number_of_island"
                      },
                      {
                        "type": "doc",
                        "id": "Recursion/DFS/word_search"
                      },
                      {
                        "type": "doc",
                        "id": "Recursion/DFS/word_search_2"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "category",
                "label": "Searching",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "category",
                    "label": "BinarySearch",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "doc",
                        "id": "Searching/BinarySearch/introduction"
                      },
                      {
                        "type": "doc",
                        "id": "Searching/BinarySearch/capacity_to_ship_package_within_ddays"
                      },
                      {
                        "type": "doc",
                        "id": "Searching/BinarySearch/minimum_limit_of_balls_in_bag"
                      },
                      {
                        "type": "doc",
                        "id": "Searching/BinarySearch/search_in_rotated"
                      },
                      {
                        "type": "doc",
                        "id": "Searching/BinarySearch/median_2_sorted_arrays"
                      },
                      {
                        "type": "doc",
                        "id": "Searching/BinarySearch/find_peak"
                      },
                      {
                        "type": "doc",
                        "id": "Searching/BinarySearch/first_last_pos"
                      },
                      {
                        "type": "doc",
                        "id": "Searching/BinarySearch/min_in_roated_sorted_array"
                      },
                      {
                        "type": "doc",
                        "id": "Searching/BinarySearch/min_roated_sorted_array_with_duplicates"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "category",
                "label": "SlidingWindow",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "doc",
                    "id": "SlidingWindow/longest-repeating-character-replacement"
                  },
                  {
                    "type": "doc",
                    "id": "SlidingWindow/longest-substring-with-at-least-k-repeating-characters"
                  },
                  {
                    "type": "doc",
                    "id": "SlidingWindow/longest_substring_without_repeat"
                  },
                  {
                    "type": "doc",
                    "id": "SlidingWindow/min_window_substring"
                  }
                ]
              },
              {
                "type": "category",
                "label": "Sorting",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "category",
                    "label": "MergeSort",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "doc",
                        "id": "Sorting/MergeSort/introduction"
                      },
                      {
                        "type": "doc",
                        "id": "Sorting/MergeSort/reverse_pairs"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "category",
                "label": "Strings",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "doc",
                    "id": "Strings/minimum-remove-to-make-valid-parentheses"
                  },
                  {
                    "type": "doc",
                    "id": "Strings/number_of_palindromic_substrings"
                  },
                  {
                    "type": "doc",
                    "id": "Strings/reorganize_strings"
                  },
                  {
                    "type": "category",
                    "label": "Recursive",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "doc",
                        "id": "Strings/Recursive/palindrome_partitioning"
                      },
                      {
                        "type": "doc",
                        "id": "Strings/Recursive/restore_ip"
                      }
                    ]
                  },
                  {
                    "type": "doc",
                    "id": "Strings/all_anagrams"
                  },
                  {
                    "type": "doc",
                    "id": "Strings/count_say"
                  },
                  {
                    "type": "doc",
                    "id": "Strings/group_anagrams"
                  },
                  {
                    "type": "doc",
                    "id": "Strings/substring_search"
                  }
                ]
              },
              {
                "type": "category",
                "label": "Tree",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "category",
                    "label": "BinarySearchTree",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "doc",
                        "id": "Tree/BinarySearchTree/create_bst_with_sorted_array"
                      },
                      {
                        "type": "doc",
                        "id": "Tree/BinarySearchTree/balance_binary_search_tree"
                      },
                      {
                        "type": "doc",
                        "id": "Tree/BinarySearchTree/kth_smallest_elemnt_bst"
                      },
                      {
                        "type": "doc",
                        "id": "Tree/BinarySearchTree/recover_bst"
                      },
                      {
                        "type": "doc",
                        "id": "Tree/BinarySearchTree/bst_iterator"
                      },
                      {
                        "type": "doc",
                        "id": "Tree/BinarySearchTree/delete_node_bst"
                      },
                      {
                        "type": "doc",
                        "id": "Tree/BinarySearchTree/is_valid_bst"
                      },
                      {
                        "type": "doc",
                        "id": "Tree/BinarySearchTree/range_sum_bst"
                      },
                      {
                        "type": "doc",
                        "id": "Tree/BinarySearchTree/unique_bst_2"
                      }
                    ]
                  },
                  {
                    "type": "category",
                    "label": "BinaryTree",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "category",
                        "label": "AncestorPath",
                        "collapsible": true,
                        "collapsed": true,
                        "items": [
                          {
                            "type": "doc",
                            "id": "Tree/BinaryTree/AncestorPath/nodes_at_k_dis"
                          },
                          {
                            "type": "doc",
                            "id": "Tree/BinaryTree/AncestorPath/burn_tree"
                          }
                        ]
                      },
                      {
                        "type": "category",
                        "label": "BTView",
                        "collapsible": true,
                        "collapsed": true,
                        "items": [
                          {
                            "type": "doc",
                            "id": "Tree/BinaryTree/BTView/vertical_view_bt"
                          }
                        ]
                      },
                      {
                        "type": "category",
                        "label": "BasicTreeQues",
                        "collapsible": true,
                        "collapsed": true,
                        "items": [
                          {
                            "type": "doc",
                            "id": "Tree/BinaryTree/BasicTreeQues/height_of_binary_tree"
                          },
                          {
                            "type": "doc",
                            "id": "Tree/BinaryTree/BasicTreeQues/balanced_binary_tree"
                          },
                          {
                            "type": "doc",
                            "id": "Tree/BinaryTree/BasicTreeQues/binary_tree_paths"
                          },
                          {
                            "type": "doc",
                            "id": "Tree/BinaryTree/BasicTreeQues/count_good_node_inbt"
                          },
                          {
                            "type": "doc",
                            "id": "Tree/BinaryTree/BasicTreeQues/flatten_bt_to_linkedlist"
                          },
                          {
                            "type": "doc",
                            "id": "Tree/BinaryTree/BasicTreeQues/invert_binary_tree"
                          },
                          {
                            "type": "doc",
                            "id": "Tree/BinaryTree/BasicTreeQues/merge_2_binary_trees"
                          },
                          {
                            "type": "doc",
                            "id": "Tree/BinaryTree/BasicTreeQues/same_tree"
                          },
                          {
                            "type": "doc",
                            "id": "Tree/BinaryTree/BasicTreeQues/subtree_of_another_tree"
                          },
                          {
                            "type": "doc",
                            "id": "Tree/BinaryTree/BasicTreeQues/sum_left_leaf"
                          },
                          {
                            "type": "doc",
                            "id": "Tree/BinaryTree/BasicTreeQues/symmetric_tree"
                          }
                        ]
                      },
                      {
                        "type": "category",
                        "label": "CommonAncestor",
                        "collapsible": true,
                        "collapsed": true,
                        "items": [
                          {
                            "type": "doc",
                            "id": "Tree/BinaryTree/CommonAncestor/lca"
                          },
                          {
                            "type": "doc",
                            "id": "Tree/BinaryTree/CommonAncestor/min_distance_bw_2_nodes"
                          },
                          {
                            "type": "doc",
                            "id": "Tree/BinaryTree/CommonAncestor/lca_bst"
                          },
                          {
                            "type": "doc",
                            "id": "Tree/BinaryTree/CommonAncestor/step-by-step-directions-from-a-binary-tree-node-to-another"
                          }
                        ]
                      },
                      {
                        "type": "category",
                        "label": "CompleteTree",
                        "collapsible": true,
                        "collapsed": true,
                        "items": [
                          {
                            "type": "doc",
                            "id": "Tree/BinaryTree/CompleteTree/count_complete_tree_nodes"
                          }
                        ]
                      },
                      {
                        "type": "category",
                        "label": "ConstructBinaryTreeFromTraversal",
                        "collapsible": true,
                        "collapsed": true,
                        "items": [
                          {
                            "type": "doc",
                            "id": "Tree/BinaryTree/ConstructBinaryTreeFromTraversal/construct_from_inorder_preorder"
                          },
                          {
                            "type": "doc",
                            "id": "Tree/BinaryTree/ConstructBinaryTreeFromTraversal/construct_from_preorder_postorder"
                          }
                        ]
                      },
                      {
                        "type": "category",
                        "label": "PathSum",
                        "collapsible": true,
                        "collapsed": true,
                        "items": [
                          {
                            "type": "doc",
                            "id": "Tree/BinaryTree/PathSum/path_sum"
                          },
                          {
                            "type": "doc",
                            "id": "Tree/BinaryTree/PathSum/sum_of_distances_intree"
                          },
                          {
                            "type": "doc",
                            "id": "Tree/BinaryTree/PathSum/path_sum_3"
                          },
                          {
                            "type": "doc",
                            "id": "Tree/BinaryTree/PathSum/max_path_sum"
                          },
                          {
                            "type": "doc",
                            "id": "Tree/BinaryTree/PathSum/path_sum_2"
                          }
                        ]
                      },
                      {
                        "type": "category",
                        "label": "Traversals",
                        "collapsible": true,
                        "collapsed": true,
                        "items": [
                          {
                            "type": "category",
                            "label": "LevelOrderTraversal",
                            "collapsible": true,
                            "collapsed": true,
                            "items": [
                              {
                                "type": "doc",
                                "id": "Tree/BinaryTree/Traversals/LevelOrderTraversal/level_order_traversal"
                              },
                              {
                                "type": "doc",
                                "id": "Tree/BinaryTree/Traversals/LevelOrderTraversal/maximum_width_bt"
                              },
                              {
                                "type": "doc",
                                "id": "Tree/BinaryTree/Traversals/LevelOrderTraversal/populate_next_right_pointer"
                              },
                              {
                                "type": "doc",
                                "id": "Tree/BinaryTree/Traversals/LevelOrderTraversal/serialize_deserialize_bt"
                              }
                            ]
                          },
                          {
                            "type": "doc",
                            "id": "Tree/BinaryTree/Traversals/inorder"
                          },
                          {
                            "type": "doc",
                            "id": "Tree/BinaryTree/Traversals/postorder"
                          },
                          {
                            "type": "doc",
                            "id": "Tree/BinaryTree/Traversals/preorder"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "category",
                "label": "Trie",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "doc",
                    "id": "Trie/introduction"
                  },
                  {
                    "type": "doc",
                    "id": "Trie/replace_words"
                  }
                ]
              }
            ]
          }
        }
      ]
    }
  },
  "docusaurus-plugin-content-blog": {
    "default": {
      "blogSidebarTitle": "Recent posts",
      "blogPosts": [],
      "blogListPaginated": [],
      "blogTags": {},
      "blogTagsListPath": "/blog/tags",
      "blogTagsPaginated": []
    }
  },
  "docusaurus-plugin-content-pages": {
    "default": [
      {
        "type": "jsx",
        "permalink": "/",
        "source": "@site/src/pages/index.js"
      },
      {
        "type": "mdx",
        "permalink": "/markdown-page",
        "source": "@site/src/pages/markdown-page.md",
        "title": "Markdown page example",
        "description": "You don't need React to write simple standalone pages.",
        "frontMatter": {
          "title": "Markdown page example"
        }
      }
    ]
  },
  "docusaurus-plugin-debug": {},
  "docusaurus-theme-classic": {},
  "docusaurus-bootstrap-plugin": {},
  "docusaurus-mdx-fallback-plugin": {}
}